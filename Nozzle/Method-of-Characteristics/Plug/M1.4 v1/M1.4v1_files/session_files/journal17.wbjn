# encoding: utf-8
# Release 16.1
SetScriptVersion(Version="16.1.91")
system1 = GetSystem(Name="FFF")
geometry1 = system1.GetContainer(ComponentName="Geometry")
geometry1.Edit()
geometry1.Exit()
meshComponent1 = system1.GetComponent(Name="Mesh")
meshComponent1.Update(AllDependencies=True)
geometry1.Edit()
geometry1.Exit()
meshComponent1.Refresh()
mesh1 = system1.GetContainer(ComponentName="Mesh")
mesh1.Edit()
mesh1.Exit()
setupComponent1 = system1.GetComponent(Name="Setup")
setupComponent1.Refresh()
setup1 = system1.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|velocity"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-velocity*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Reports|Forces"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Forces*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Force Reports*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Force Reports*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(%cx-warning-dialog "OK to close Fluent?" #f)(cx-gui-do cx-activate-item "Warning*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
mesh1.Edit()
mesh1.Exit()
setupComponent1.Refresh()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|velocity"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-velocity*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Reports|Forces"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Forces*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Force Reports*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Force Reports*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|pressure"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-pressure*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Reports|Fluxes"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Fluxes*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Flux Reports*Frame2*List2(Boundaries)\" '( 3))(cx-gui-do cx-activate-item \"Flux Reports*Frame2*List2(Boundaries)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Flux Reports*Frame2*List2(Boundaries)\" '( 3 4))(cx-gui-do cx-activate-item \"Flux Reports*Frame2*List2(Boundaries)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Flux Reports*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Flux Reports*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Reports|Surface Integrals"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Surface Integrals*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Integrals*Frame1*DropDownList1(Report Type)\" '( 9))(cx-gui-do cx-activate-item \"Surface Integrals*Frame1*DropDownList1(Report Type)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Integrals*Frame2*Table2*DropDownList1(Field Variable)\" '( 6))(cx-gui-do cx-activate-item \"Surface Integrals*Frame2*Table2*DropDownList1(Field Variable)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Integrals*Frame2*Table2*DropDownList1(Field Variable)\" '( 2))(cx-gui-do cx-activate-item \"Surface Integrals*Frame2*Table2*DropDownList1(Field Variable)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Integrals*Frame1*DropDownList1(Report Type)\" '( 10))(cx-gui-do cx-activate-item \"Surface Integrals*Frame1*DropDownList1(Report Type)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Integrals*Frame3*List3(Surfaces)\" '( 3))(cx-gui-do cx-activate-item \"Surface Integrals*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Integrals*Frame3*List3(Surfaces)\" '( 3 4))(cx-gui-do cx-activate-item \"Surface Integrals*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Integrals*Frame3*List3(Surfaces)\" '( 4))(cx-gui-do cx-activate-item \"Surface Integrals*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Integrals*Frame3*List3(Surfaces)\" '( 3 4))(cx-gui-do cx-activate-item \"Surface Integrals*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Integrals*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Integrals*Frame1*DropDownList1(Report Type)\" '( 3))(cx-gui-do cx-activate-item \"Surface Integrals*Frame1*DropDownList1(Report Type)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Integrals*Frame1*DropDownList1(Report Type)\" '( 0))(cx-gui-do cx-activate-item \"Surface Integrals*Frame1*DropDownList1(Report Type)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Integrals*Frame1*DropDownList1(Report Type)\" '( 11))(cx-gui-do cx-activate-item \"Surface Integrals*Frame1*DropDownList1(Report Type)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Integrals*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Integrals*Frame3*List3(Surfaces)\" '( 4))(cx-gui-do cx-activate-item \"Surface Integrals*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Integrals*Frame3*List3(Surfaces)\" '())(cx-gui-do cx-activate-item \"Surface Integrals*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Integrals*Frame3*List3(Surfaces)\" '( 4))(cx-gui-do cx-activate-item \"Surface Integrals*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Integrals*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Integrals*Frame3*List3(Surfaces)\" '())(cx-gui-do cx-activate-item \"Surface Integrals*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Integrals*Frame3*List3(Surfaces)\" '( 3))(cx-gui-do cx-activate-item \"Surface Integrals*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Integrals*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Integrals*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Reports|Volume Integrals"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Volume Integrals*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Volume Integrals*Frame1(Report Type)*ToggleBox1(Report Type)*Mass Integral" #f)(cx-gui-do cx-activate-item "Volume Integrals*Frame1(Report Type)*ToggleBox1(Report Type)*Mass Integral")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Volume Integrals*Frame2*Table2*DropDownList1(Field Variable)\" '( 2))(cx-gui-do cx-activate-item \"Volume Integrals*Frame2*Table2*DropDownList1(Field Variable)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Volume Integrals*Frame3*List3(Cell Zones)\" '( 0))(cx-gui-do cx-activate-item \"Volume Integrals*Frame3*List3(Cell Zones)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Volume Integrals*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Volume Integrals*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|velocity"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-velocity*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton3(Compute)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Frame4*Frame3*List3(Surfaces)\" '( 3))(cx-gui-do cx-activate-item \"Contours*Frame4*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton3(Compute)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Frame4*Frame3*List3(Surfaces)\" '( 3 5))(cx-gui-do cx-activate-item \"Contours*Frame4*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Frame4*Frame3*List3(Surfaces)\" '( 3))(cx-gui-do cx-activate-item \"Contours*Frame4*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Frame4*Frame3*List3(Surfaces)\" '( 3 4))(cx-gui-do cx-activate-item \"Contours*Frame4*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton3(Compute)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Reports|Fluxes"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Reports|Fluxes"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Flux Reports*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Reports|Surface Integrals"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Reports|Surface Integrals"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Integrals*Frame1*DropDownList1(Report Type)\" '( 11))(cx-gui-do cx-activate-item \"Surface Integrals*Frame1*DropDownList1(Report Type)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Integrals*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Integrals*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Reports|Forces"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Reports|Forces"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Force Reports*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-use-window-id 1)(cx-gui-do cx-activate-item "Force Reports*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Reports|Forces"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Forces*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Force Reports*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(%cx-warning-dialog "OK to close Fluent?" #f)(cx-gui-do cx-activate-item "Warning*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
Save(Overwrite=True)
