# encoding: utf-8
# Release 16.1
SetScriptVersion(Version="16.1.91")
Save(Overwrite=True)
template1 = GetTemplate(TemplateName="Fluid Flow")
system1 = template1.CreateSystem()
system1.DisplayText = "Shelf"
geometry1 = system1.GetContainer(ComponentName="Geometry")
geometry1.Edit()
Save(Overwrite=True)
geometry1.Exit()
meshComponent1 = system1.GetComponent(Name="Mesh")
meshComponent1.Refresh()
mesh1 = system1.GetContainer(ComponentName="Mesh")
mesh1.Edit()
Save(Overwrite=True)
mesh1.Exit()
setupComponent1 = system1.GetComponent(Name="Setup")
setupComponent1.Refresh()
setup1 = system1.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}, RunParallel=True, NumberOfProcessors=8, NumberOfGPGPUs=1))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Frame1*Table1*Frame1(Mesh)*ButtonBox1(Mesh)*PushButton3(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Frame1*Table1*Frame1(Mesh)*ButtonBox1(Mesh)*PushButton5(Report Quality)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models"))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Models*Frame1*Table1*Frame1*List1(Models)\" '( 1))(cx-gui-do cx-activate-item \"Models*Frame1*Table1*Frame1*List1(Models)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Models*Frame1*Table1*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Energy*Frame1(Energy)*Table1(Energy)*Frame1*ToggleBox1*CheckButton1(Energy Equation)" #f)(cx-gui-do cx-activate-item "Energy*Frame1(Energy)*Table1(Energy)*Frame1*ToggleBox1*CheckButton1(Energy Equation)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Energy*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Models*Frame1*Table1*Frame1*List1(Models)\" '( 2))(cx-gui-do cx-activate-item \"Models*Frame1*Table1*Frame1*List1(Models)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Models*Frame1*Table1*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Viscous Model*Frame1*Table1*Frame1(Model)*ToggleBox1(Model)*k-epsilon (2 eqn)" #f)(cx-gui-do cx-activate-item "Viscous Model*Frame1*Table1*Frame1(Model)*ToggleBox1(Model)*k-epsilon (2 eqn)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Viscous Model*Frame1*Table1*Frame6(k-epsilon Model)*ToggleBox6(k-epsilon Model)*Realizable" #f)(cx-gui-do cx-activate-item "Viscous Model*Frame1*Table1*Frame6(k-epsilon Model)*ToggleBox6(k-epsilon Model)*Realizable")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Viscous Model*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Models*Frame1*Table1*Frame1*List1(Models)\" '( 4))(cx-gui-do cx-activate-item \"Models*Frame1*Table1*Frame1*List1(Models)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Models*Frame1*Table1*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Heat Exchanger Model*Frame1(Options)*Table1(Options)*CheckButton1(Dual Cell Model)" #f)(cx-gui-do cx-activate-item "Heat Exchanger Model*Frame1(Options)*Table1(Options)*CheckButton1(Dual Cell Model)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Heat Exchanger Model*Frame1(Options)*Table1(Options)*PushButton2(Define)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dual Cell Heat Exchanger*ButtonBox2*PushButton1(New)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Set Dual Cell Heat Exchanger*PanelButtons*PushButton2(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Dual Cell Heat Exchanger*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Heat Exchanger Model*Frame1(Options)*Table1(Options)*CheckButton1(Dual Cell Model)" #t)(cx-gui-do cx-activate-item "Heat Exchanger Model*Frame1(Options)*Table1(Options)*CheckButton1(Dual Cell Model)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Heat Exchanger Model*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Models*Frame1*Table1*Frame1*List1(Models)\" '( 5))(cx-gui-do cx-activate-item \"Models*Frame1*Table1*Frame1*List1(Models)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Models*Frame1*Table1*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Species Model*Frame1*Table1*Frame1(Model)*ToggleBox1(Model)*Non-Premixed Combustion" #f)(cx-gui-do cx-activate-item "Species Model*Frame1*Table1*Frame1(Model)*ToggleBox1(Model)*Non-Premixed Combustion")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame1(Chemistry)*Frame1*Frame1*Frame3(Stream Options)*Table3(Stream Options)*CheckButton1(Secondary Stream)" #f)(cx-gui-do cx-activate-item "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame1(Chemistry)*Frame1*Frame1*Frame3(Stream Options)*Table3(Stream Options)*CheckButton1(Secondary Stream)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame3(Boundary)*Frame1*Frame1*Table1*RealEntry6\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame3(Boundary)*Frame1*Frame2*Table2*Frame1(Boundary Species)*PushButton4(List Available Species)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Species Model*PanelButtons*PushButton1(Apply)\")(cx-gui-do cx-activate-item \"Warning*OK\")(cx-gui-do cx-activate-item \"Error*OK\")(cx-gui-do cx-set-real-entry-list \"Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame3(Boundary)*Frame1*Frame1*Table1*RealEntry20\" '( 0.767))(cx-gui-do cx-set-real-entry-list \"Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame3(Boundary)*Frame1*Frame1*Table1*RealEntry24\" '( 0.233))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*PanelButtons*PushButton1(Apply)")(cx-gui-do cx-activate-item "Warning*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame9(Table)*PushButton3(Calculate PDF Table)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame1(Chemistry)*Frame1*Frame1*Frame3(Stream Options)*Table3(Stream Options)*CheckButton1(Secondary Stream)" #t)(cx-gui-do cx-activate-item "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame1(Chemistry)*Frame1*Frame1*Frame3(Stream Options)*Table3(Stream Options)*CheckButton1(Secondary Stream)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame9(Table)*PushButton3(Calculate PDF Table)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Fluid*New...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*Frame1*Table1*Frame1*ButtonBox3*PushButton1(Fluent Database)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Database Materials*Frame1*Table1*Frame1*DropDownList4(Material Type)\" '( 1))(cx-gui-do cx-activate-item \"Database Materials*Frame1*Table1*Frame1*DropDownList4(Material Type)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Database Materials*Frame1*Table1*Frame1*Frame1*List1(Materials)\" '( 6))(cx-gui-do cx-activate-item \"Database Materials*Frame1*Table1*Frame1*Frame1*List1(Materials)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Database Materials*PanelButtons*PushButton1(Copy)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Database Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Change/Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*DefineMenu*Boundary Conditions...")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\" '( 1))(cx-gui-do cx-activate-item \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\" '( 1))(cx-gui-do cx-activate-item \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Frame1*Table1*Frame2*Table2*Frame4*Table4*ButtonBox1*PushButton1(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "pressure-outlet-6-1*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\" '( 2))(cx-gui-do cx-activate-item \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Frame1*Table1*Frame2*Table2*Frame4*Table4*ButtonBox1*PushButton1(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "velocity-inlet-5-1*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\" '( 3))(cx-gui-do cx-activate-item \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\" '( 2))(cx-gui-do cx-activate-item \"Boundary Conditions*Frame1*Table1*Frame1*List1(Zone)\")")
setup1.SendCommand(Command="(cx-use-window-id 1)")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)(cx-use-window-id 1)(dolly-camera -0.000156488 -9.1746e-005 0)(cx-use-window-id 1)(cx-use-window-id 1)')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Frame1*Table1*Frame2*Table2*Frame4*Table4*Frame2*Table2*ButtonBox1*PushButton2(Profiles)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Profiles*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Frame1*Table1*Frame2*Table2*Frame4*Table4*Frame2*Table2*PushButton2(Operating Conditions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Operating Conditions*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Frame1*Table1*Frame2*Table2*Frame4*Table4*ButtonBox1*PushButton2(Parameters)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Parameters*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|velocity-inlet (velocity-inlet)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Frame1*Table1*ButtonBox10*PushButton2(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Frame1*Table1*IntegerEntry9(Number of Iterations)" 100)(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*IntegerEntry9(Number of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Contours*New...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Contours*Frame2*Frame1(Options)*ToggleBox1(Options)*CheckButton1(Filled)" #f)(cx-gui-do cx-activate-item "Contours*Frame2*Frame1(Options)*ToggleBox1(Options)*CheckButton1(Filled)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Contours*Frame1*TextEntry1(Contour Name)" "velocity")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Frame3*Table3*DropDownList1(Contours of)\" '( 2))(cx-gui-do cx-activate-item \"Contours*Frame3*Table3*DropDownList1(Contours of)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Frame4*Frame3*List3(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Contours*Frame4*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton3(Compute)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|velocity"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-velocity*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Frame4*Frame3*List3(Surfaces)\" '( 0 3))(cx-gui-do cx-activate-item \"Contours*Frame4*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Frame4*Frame3*List3(Surfaces)\" '( 3))(cx-gui-do cx-activate-item \"Contours*Frame4*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|velocity"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-velocity*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|velocity"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-velocity*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Frame4*Frame3*List3(Surfaces)\" '( 0 3))(cx-gui-do cx-activate-item \"Contours*Frame4*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Frame4*Frame3*List3(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Contours*Frame4*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton3(Compute)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Contours*New...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Contours*Frame1*TextEntry1(Contour Name)" "mixtures")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Frame3*Table3*DropDownList1(Contours of)\" '( 5))(cx-gui-do cx-activate-item \"Contours*Frame3*Table3*DropDownList1(Contours of)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton3(Compute)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|velocity-inlet (velocity-inlet)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|velocity-inlet (velocity-inlet)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"velocity-inlet-5-1*Frame4*Frame1(Momentum)*Frame1*Table1*Frame12*Table12*RealEntry2(Velocity Magnitude)\" '( 100))(cx-gui-do cx-activate-item \"velocity-inlet-5-1*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Frame1*Table1*ButtonBox10*PushButton2(Initialize)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"GraphicsArea*GraphicsView1*DropDownList1\" '( 0))(cx-gui-do cx-activate-item \"GraphicsArea*GraphicsView1*DropDownList1\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|mixtures"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|mixtures"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-velocity*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|velocity"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-velocity*Display")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Frame1*Table1*Frame2*Table2*Frame4*Table4*ButtonBox1*PushButton3(Display Mesh)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*General Tools*write")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuWrite*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Mesh"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|mixtures"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|mixtures"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|velocity"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|velocity"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton3(Compute)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(%cx-warning-dialog "OK to close Fluent?" #f)(cx-gui-do cx-activate-item "Warning*OK")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"MenuBar*FileMenu*Close Fluent\")(cx-gui-do cx-set-toggle-button \"Settings have changed!*Frame1*Table1*ToggleBox2*Don't Save changes and exit\" #f)(cx-gui-do cx-activate-item \"Settings have changed!*Frame1*Table1*ToggleBox2*Don't Save changes and exit\")(cx-gui-do cx-activate-item \"Settings have changed!*PanelButtons*PushButton1(OK)\")")
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Frame1*Table1*Frame1(Mesh)*ButtonBox1(Mesh)*PushButton5(Report Quality)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models"))')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Models*Frame1*Table1*Frame1*List1(Models)\" '( 5))(cx-gui-do cx-activate-item \"Models*Frame1*Table1*Frame1*List1(Models)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Models*Frame1*Table1*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame1(Chemistry)*Frame1*Frame1*Frame1(State Relation)*ToggleBox1(State Relation)*Steady Diffusion Flamelet" #f)(cx-gui-do cx-activate-item "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame1(Chemistry)*Frame1*Frame1*Frame1(State Relation)*ToggleBox1(State Relation)*Steady Diffusion Flamelet")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame9(Table)*PushButton3(Calculate PDF Table)")(cx-gui-do cx-activate-item "Error*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame1(Chemistry)*Frame1*Frame1*Frame6(Options)*ToggleBox1*Import Flamelet" #f)(cx-gui-do cx-activate-item "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame1(Chemistry)*Frame1*Frame1*Frame6(Options)*ToggleBox1*Import Flamelet")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame1(Chemistry)*Frame1*Frame1*Frame6(Options)*ToggleBox1*Create Flamelet" #f)(cx-gui-do cx-activate-item "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame1(Chemistry)*Frame1*Frame1*Frame6(Options)*ToggleBox1*Create Flamelet")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*PanelButtons*PushButton1(Apply)")(cx-gui-do cx-activate-item "Warning*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame1(Chemistry)*Frame1*Frame1*Frame1(State Relation)*ToggleBox1(State Relation)*Chemical Equilibrium" #f)(cx-gui-do cx-activate-item "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame1(Chemistry)*Frame1*Frame1*Frame1(State Relation)*ToggleBox1(State Relation)*Chemical Equilibrium")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame1(Chemistry)*Frame1*Frame1*Frame1(State Relation)*ToggleBox1(State Relation)*Steady Diffusion Flamelet" #f)(cx-gui-do cx-activate-item "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame1(Chemistry)*Frame1*Frame1*Frame1(State Relation)*ToggleBox1(State Relation)*Steady Diffusion Flamelet")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame1(Chemistry)*Frame1*Frame1*Frame1(State Relation)*ToggleBox1(State Relation)*Chemical Equilibrium" #f)(cx-gui-do cx-activate-item "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame1(Chemistry)*Frame1*Frame1*Frame1(State Relation)*ToggleBox1(State Relation)*Chemical Equilibrium")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame1(Chemistry)*Frame1*Frame1*PushButton5(Coal Calculator)")(cx-gui-do cx-activate-item "Coal Calculator*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame3(Boundary)*Frame1*Frame2*Table2*Frame3(Specify Species in)*ButtonBox3(Specify Species in)*Mass Fraction" #f)(cx-gui-do cx-activate-item "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame3(Boundary)*Frame1*Frame2*Table2*Frame3(Specify Species in)*ButtonBox3(Specify Species in)*Mass Fraction")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame9(Table)*PushButton3(Calculate PDF Table)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(%cx-warning-dialog "OK to close Fluent?" #f)(cx-gui-do cx-activate-item "Warning*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
geometry1.Edit()
geometry1.Exit()
meshComponent1.Refresh()
mesh1.Edit()
mesh1.Exit()
setupComponent1.Refresh()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|mass-inlet (velocity-inlet)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|mass-inlet (velocity-inlet)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "velocity-inlet-14-1*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|mass-inlet (velocity-inlet)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*TypeSubMenu*mass-flow-inlet")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"mass-flow-inlet-14-1*Frame4*Frame1(Momentum)*Frame1*Table1*Frame8*Table8*RealEntry2(Mass Flow Rate)\" '( 0.05))(cx-gui-do cx-activate-item \"mass-flow-inlet-14-1*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|velocity-inlet (velocity-inlet)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|velocity-inlet (velocity-inlet)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "velocity-inlet-5-1*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|mass-inlet (mass-flow-inlet)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|mass-inlet (mass-flow-inlet)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"mass-flow-inlet-14-1*Frame4*Frame7(Species)*Frame1*Table1*Frame36*Table36*RealEntry2(Mean Mixture Fraction)\" '( 1))(cx-gui-do cx-activate-item \"mass-flow-inlet-14-1*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|pressure-outlet (pressure-outlet)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|pressure-outlet (pressure-outlet)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "pressure-outlet-6-1*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|velocity-inlet (velocity-inlet)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|wall-surface_body (wall)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Frame1*Table1*ButtonBox10*PushButton2(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|velocity"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Species (Non-Premixed Combustion)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Species (Non-Premixed Combustion)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Species Model*Frame1*Table1*Frame6(PDF Options)*Table6(PDF Options)*CheckButton1(Inlet Diffusion)" #f)(cx-gui-do cx-activate-item "Species Model*Frame1*Table1*Frame6(PDF Options)*Table6(PDF Options)*CheckButton1(Inlet Diffusion)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame9(Table)*PushButton3(Calculate PDF Table)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*PanelButtons*PushButton1(Apply)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|mass-inlet (mass-flow-inlet)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|mass-inlet (mass-flow-inlet)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-text-entry \"mass-flow-inlet-14-1*TextEntry1(Zone Name)\" \"fuel-inlet\")(cx-gui-do cx-set-real-entry-list \"mass-flow-inlet-14-1*Frame4*Frame7(Species)*Frame1*Table1*Frame36*Table36*RealEntry2(Mean Mixture Fraction)\" '( 1))(cx-gui-do cx-activate-item \"mass-flow-inlet-14-1*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|velocity-inlet (velocity-inlet)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-velocity-inlet (velocity-inlet)*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-text-entry \"velocity-inlet-5-1*TextEntry1(Zone Name)\" \"air-inlet\")(cx-gui-do cx-set-real-entry-list \"velocity-inlet-5-1*Frame4*Frame7(Species)*Frame1*Table1*Frame36*Table36*RealEntry2(Mean Mixture Fraction)\" '( 0))(cx-gui-do cx-set-real-entry-list \"velocity-inlet-5-1*Frame4*Frame3(Thermal)*Frame1*Table1*Frame1*Table1*RealEntry2(Temperature)\" '( 400))(cx-gui-do cx-activate-item \"velocity-inlet-5-1*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Mixture|pdf-mixture"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Heat Exchanger (Off)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Heat Exchanger (Off)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Heat Exchanger Model*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Frame1*Table1*ButtonBox10*PushButton2(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton1(Check Case)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Case Check*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 3))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 0 1))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(Compute)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 6))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 4))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|velocity"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|velocity"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
solution1 = system1.GetContainer(ComponentName="Solution")
solution1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-gui-do cx-set-integer-entry "Run Calculation*Frame1*Table1*IntegerEntry9(Number of Iterations)" 1000)(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*IntegerEntry9(Number of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*General Tools*write")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuWrite*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|mixtures"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-mixtures*Delete")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|velocity"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-mixtures*Delete")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 3))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 1))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 1 3))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(Compute)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 4))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 6))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 7))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList2\" '( 1))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList2\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList2\" '( 5))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList2\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 10))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 4))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList2\" '( 2))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList2\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PushButton10(New Surface)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton5(Draw Mesh)" #f)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton5(Draw Mesh)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton5(Draw Mesh)" #t)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton5(Draw Mesh)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Contours*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Frame4*Frame3*List3(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Contours*Frame4*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Frame4*Frame3*List3(Surfaces)\" '())(cx-gui-do cx-activate-item \"Contours*Frame4*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton3(Compute)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Contours*Frame2*Frame1(Options)*ToggleBox1(Options)*CheckButton2(Node Values)" #t)(cx-gui-do cx-activate-item "Contours*Frame2*Frame1(Options)*ToggleBox1(Options)*CheckButton2(Node Values)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Contours*Frame2*Frame1(Options)*ToggleBox1(Options)*CheckButton3(Global Range)" #t)(cx-gui-do cx-activate-item "Contours*Frame2*Frame1(Options)*ToggleBox1(Options)*CheckButton3(Global Range)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Contours*Frame2*Frame1(Options)*ToggleBox1(Options)*CheckButton3(Global Range)" #f)(cx-gui-do cx-activate-item "Contours*Frame2*Frame1(Options)*ToggleBox1(Options)*CheckButton3(Global Range)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton3(Compute)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Frame4*Frame3*List3(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Contours*Frame4*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Frame4*Frame3*List3(Surfaces)\" '( 0 1))(cx-gui-do cx-activate-item \"Contours*Frame4*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Frame4*Frame3*List3(Surfaces)\" '( 1))(cx-gui-do cx-activate-item \"Contours*Frame4*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Contours*Frame2*Frame1(Options)*ToggleBox1(Options)*CheckButton1(Filled)" #t)(cx-gui-do cx-activate-item "Contours*Frame2*Frame1(Options)*ToggleBox1(Options)*CheckButton1(Filled)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Contours*Frame2*Frame1(Options)*ToggleBox1(Options)*CheckButton4(Auto Range)" #t)(cx-gui-do cx-activate-item "Contours*Frame2*Frame1(Options)*ToggleBox1(Options)*CheckButton4(Auto Range)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Contours*Frame2*Frame1(Options)*ToggleBox1(Options)*CheckButton4(Auto Range)" #f)(cx-gui-do cx-activate-item "Contours*Frame2*Frame1(Options)*ToggleBox1(Options)*CheckButton4(Auto Range)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Contours*Frame2*Frame1(Options)*ToggleBox1(Options)*CheckButton3(Global Range)" #t)(cx-gui-do cx-activate-item "Contours*Frame2*Frame1(Options)*ToggleBox1(Options)*CheckButton3(Global Range)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Contours*Frame2*Frame1(Options)*ToggleBox1(Options)*CheckButton3(Global Range)" #f)(cx-gui-do cx-activate-item "Contours*Frame2*Frame1(Options)*ToggleBox1(Options)*CheckButton3(Global Range)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Contours*Frame2*Frame1(Options)*ToggleBox1(Options)*CheckButton3(Global Range)" #t)(cx-gui-do cx-activate-item "Contours*Frame2*Frame1(Options)*ToggleBox1(Options)*CheckButton3(Global Range)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Contours*Frame2*Frame1(Options)*ToggleBox1(Options)*CheckButton3(Global Range)" #f)(cx-gui-do cx-activate-item "Contours*Frame2*Frame1(Options)*ToggleBox1(Options)*CheckButton3(Global Range)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton3(Compute)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Frame3*Table3*DropDownList1(Contours of)\" '( 3))(cx-gui-do cx-activate-item \"Contours*Frame3*Table3*DropDownList1(Contours of)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton3(Compute)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Frame4*Frame3*List3(Surfaces)\" '( 0 1))(cx-gui-do cx-activate-item \"Contours*Frame4*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Frame4*Frame3*List3(Surfaces)\" '( 0 1 2))(cx-gui-do cx-activate-item \"Contours*Frame4*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Frame4*Frame3*List3(Surfaces)\" '( 0 1 2 3))(cx-gui-do cx-activate-item \"Contours*Frame4*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Frame4*Frame3*List3(Surfaces)\" '( 0 1 2 3 4))(cx-gui-do cx-activate-item \"Contours*Frame4*Frame3*List3(Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton3(Compute)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Particle Tracks"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Particle Tracks"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Particle Tracks*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Particle Tracks*Frame2*Table2*DropDownList1(Color by)\" '( 4))(cx-gui-do cx-activate-item \"Particle Tracks*Frame2*Table2*DropDownList1(Color by)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Particle Tracks*PushButton5(Update Min/Max)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Particle Tracks*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ViewMenu*Graphics Window")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ViewMenu*Graphics Window")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton9(Write to File)" #f)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton9(Write to File)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton9(Write to File)" #t)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton9(Write to File)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton9(Write to File)" #f)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton9(Write to File)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton9(Write to File)" #t)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton9(Write to File)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PushButton10(New Surface)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(Pulse)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(Pulse)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(Compute)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*General Tools*write")')
Save(Overwrite=True)
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuWrite*Save Project")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*User-DefinedSubMenu*Memory...")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Memory*Frame1*Table1*IntegerEntry2" 1)(cx-gui-do cx-activate-item "User-Defined Memory*Frame1*Table1*IntegerEntry2")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Memory*Frame1*Table1*IntegerEntry4" 1)(cx-gui-do cx-activate-item "User-Defined Memory*Frame1*Table1*IntegerEntry4")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Memory*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(%cx-warning-dialog "OK to close Fluent?" #f)(cx-gui-do cx-activate-item "Warning*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")(cx-gui-do cx-set-toggle-button "Settings have changed!*Frame1*Table1*ToggleBox2*Use settings changes for current and future calculations" #f)(cx-gui-do cx-activate-item "Settings have changed!*Frame1*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
solutionComponent1 = system1.GetComponent(Name="Solution")
solutionComponent1.Refresh()
solution1.Edit()
solutionComponent1.Refresh()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 1))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 1 3))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(Pulse)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(Pulse)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 4))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(Pulse)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(Pulse)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(%cx-warning-dialog "OK to close Fluent?" #f)(cx-gui-do cx-activate-item "Warning*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
system2 = system1.Duplicate(RelativeTo=system1)
system2.DisplayText = "Shelf v1.1"
geometry2 = system2.GetContainer(ComponentName="Geometry")
geometry2.Edit()
geometry2.Exit()
meshComponent2 = system2.GetComponent(Name="Mesh")
meshComponent2.Refresh()
mesh2 = system2.GetContainer(ComponentName="Mesh")
mesh2.Edit()
mesh2.Exit()
meshComponent2.Update(AllDependencies=True)
setupComponent2 = system2.GetComponent(Name="Setup")
setupComponent2.Refresh()
setup2 = system2.GetContainer(ComponentName="Setup")
fluentLauncherSettings2 = setup2.GetFluentLauncherSettings()
fluentLauncherSettings2.SetEntityProperties(Properties=Set(EnvPath={}))
setup2.Edit()
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Frame1*Table1*ButtonBox10*PushButton2(Initialize)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-integer-entry "Run Calculation*Frame1*Table1*IntegerEntry9(Number of Iterations)" 10000)(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*IntegerEntry9(Number of Iterations)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 1))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 1 3))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 4))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")(cx-gui-do cx-activate-item "Error*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(Pulse)")(cx-gui-do cx-activate-item "Error*OK")(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Frame1*Table1*Frame12*PushButton1(Reset DPM Sources)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Frame1*Table1*ButtonBox10*PushButton2(Initialize)")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ParallelMenu*Check")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ParallelMenu*Auto Partition...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Auto Partition Mesh*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ParallelMenu*Thread Control...")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Thread Control*Frame1(  Maximum Number of Spawned Threads)*ToggleBox1*Number of Cores on Machine" #f)(cx-gui-do cx-activate-item "Thread Control*Frame1(  Maximum Number of Spawned Threads)*ToggleBox1*Number of Cores on Machine")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Thread Control*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*ParallelMenu*Thread Control...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Thread Control*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")(cx-gui-do cx-activate-item "Error*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(Pulse)")(cx-gui-do cx-activate-item "Error*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(Pulse)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")(cx-gui-do cx-activate-item "Error*OK")(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(%cx-warning-dialog "OK to close Fluent?" #f)(cx-gui-do cx-activate-item "Warning*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
mesh2.Edit()
mesh2.Exit()
setupComponent2.Refresh()
fluentLauncherSettings2.SetEntityProperties(Properties=Set(EnvPath={}))
setup2.Edit()
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "General*Frame1*Table1*Frame1(Mesh)*ButtonBox1(Mesh)*PushButton3(Check)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "General*Frame1*Table1*Frame1(Mesh)*ButtonBox1(Mesh)*PushButton5(Report Quality)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*MeshMenu*Smooth/Swap...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Smooth/Swap Mesh*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Smooth/Swap Mesh*Frame1(Smooth)*IntegerEntry3(Number of Iterations)" 40)(cx-gui-do cx-activate-item "Smooth/Swap Mesh*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Smooth/Swap Mesh*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer Tools*zoom")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera '(0.0201383 0.00492141 0.00642234) '(0.0201383 0.00492141 0) '(-2.45564e-010 1 0) 0.00256894 0.00256894 \"perspective\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*MeshMenu*Smooth/Swap...")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Smooth/Swap Mesh*Frame1(Smooth)*RealEntry2(Relaxation Factor)\" '( 0.2))(cx-gui-do cx-activate-item \"Smooth/Swap Mesh*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Smooth/Swap Mesh*Frame1(Smooth)*IntegerEntry3(Number of Iterations)" 400)(cx-gui-do cx-activate-item "Smooth/Swap Mesh*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Smooth/Swap Mesh*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Smooth/Swap Mesh*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Smooth/Swap Mesh*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)(cx-use-window-id 1)(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-use-window-id 1)(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(%cx-warning-dialog "OK to close Fluent?" #f)(cx-gui-do cx-activate-item "Warning*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
mesh2.Edit()
mesh2.Exit()
setupComponent2.Refresh()
fluentLauncherSettings2.SetEntityProperties(Properties=Set(EnvPath={}))
setup2.Edit()
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Frame1*Table1*ButtonBox10*PushButton2(Initialize)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "General*Frame1*Table1*Frame1(Mesh)*ButtonBox1(Mesh)*PushButton3(Check)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "General*Frame1*Table1*Frame1(Mesh)*ButtonBox1(Mesh)*PushButton5(Report Quality)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")(cx-gui-do cx-activate-item "Working*Cancel")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 1))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 1 3))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")(cx-gui-do cx-activate-item "Error*OK")(cx-gui-do cx-activate-item "Error*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton6(Accuracy Control)" #f)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton6(Accuracy Control)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")(cx-gui-do cx-activate-item "Error*OK")(cx-gui-do cx-activate-item "Error*OK")(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|pressure-outlet (pressure-outlet)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|pressure-outlet (pressure-outlet)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"pressure-outlet-6-1*Frame4*Frame7(Species)*Frame1*Table1*Frame1*Table1*RealEntry2(Mean Mixture Fraction)\" '( 0.5))(cx-gui-do cx-set-real-entry-list \"pressure-outlet-6-1*Frame4*Frame7(Species)*Frame1*Table1*Frame3*Table3*RealEntry2(Mixture Fraction Variance)\" '( 0.5))(cx-gui-do cx-activate-item \"pressure-outlet-6-1*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-activate-item \"Error*OK\")(cx-gui-do cx-set-real-entry-list \"pressure-outlet-6-1*Frame4*Frame7(Species)*Frame1*Table1*Frame3*Table3*RealEntry2(Mixture Fraction Variance)\" '( 0.25))(cx-gui-do cx-activate-item \"pressure-outlet-6-1*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|air-inlet (velocity-inlet)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|air-inlet (velocity-inlet)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"velocity-inlet-5-1*Frame4*Frame1(Momentum)*Frame1*Table1*Frame12*Table12*RealEntry2(Velocity Magnitude)\" '( 50))(cx-gui-do cx-set-real-entry-list \"velocity-inlet-5-1*Frame4*Frame7(Species)*Frame1*Table1*Frame36*Table36*RealEntry2(Mean Mixture Fraction)\" '( 0))(cx-gui-do cx-activate-item \"velocity-inlet-5-1*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|pressure-outlet (pressure-outlet)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|pressure-outlet (pressure-outlet)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"pressure-outlet-6-1*Frame4*Frame7(Species)*Frame1*Table1*Frame1*Table1*RealEntry2(Mean Mixture Fraction)\" '( 0))(cx-gui-do cx-set-real-entry-list \"pressure-outlet-6-1*Frame4*Frame7(Species)*Frame1*Table1*Frame3*Table3*RealEntry2(Mixture Fraction Variance)\" '( 0))(cx-gui-do cx-activate-item \"pressure-outlet-6-1*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|fuel-inlet (mass-flow-inlet)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|fuel-inlet (mass-flow-inlet)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"mass-flow-inlet-19-1*Frame4*Frame1(Momentum)*Frame1*Table1*Frame8*Table8*RealEntry2(Mass Flow Rate)\" '( 0.01))(cx-gui-do cx-set-real-entry-list \"mass-flow-inlet-19-1*Frame4*Frame7(Species)*Frame1*Table1*Frame36*Table36*RealEntry2(Mean Mixture Fraction)\" '( 1))(cx-gui-do cx-activate-item \"mass-flow-inlet-19-1*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*General Tools*write")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuWrite*Save Project")(cx-gui-do cx-set-toggle-button "Settings have changed!*Frame1*Table1*ToggleBox2*Use settings changes for current and future calculations" #f)(cx-gui-do cx-activate-item "Settings have changed!*Frame1*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
Save(Overwrite=True)
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|fuel-inlet (mass-flow-inlet)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "mass-flow-inlet-19-1*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Initialization"))(cx-gui-do cx-set-integer-entry "Run Calculation*Frame1*Table1*IntegerEntry9(Number of Iterations)" 1000)(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*IntegerEntry9(Number of Iterations)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Frame1*Table1*ButtonBox10*PushButton2(Initialize)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton1(Check Case)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Case Check*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")(cx-gui-do cx-activate-item "Error*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(Pulse)")(cx-gui-do cx-activate-item "Error*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(Pulse)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 4))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")(cx-gui-do cx-activate-item "Error*OK")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 3))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 1 3))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")(cx-gui-do cx-activate-item "Error*OK")(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|fuel-inlet (mass-flow-inlet)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|fuel-inlet (mass-flow-inlet)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"mass-flow-inlet-19-1*Frame4*Frame1(Momentum)*Frame1*Table1*Frame15*Table15*RealEntry2(Y-Component of Flow Direction)\" '( 1))(cx-gui-do cx-activate-item \"mass-flow-inlet-19-1*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Frame1*Table1*ButtonBox10*PushButton2(Initialize)")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")(cx-gui-do cx-activate-item "Error*OK")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 6))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup2.SendCommand(Command="(cx-gui-do cx-activate-item \"Pathlines*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-activate-item \"Error*OK\")(cx-gui-do cx-set-position \"Pathlines\" '(x 286 y 446))(cx-gui-do cx-set-position \"Pathlines\" '(x 286 y 447))(cx-gui-do cx-set-position \"Pathlines\" '(x 286 y 448))(cx-gui-do cx-set-position \"Pathlines\" '(x 285 y 449))(cx-gui-do cx-set-position \"Pathlines\" '(x 285 y 450))(cx-gui-do cx-set-position \"Pathlines\" '(x 284 y 450))(cx-gui-do cx-set-position \"Pathlines\" '(x 284 y 451))(cx-gui-do cx-set-position \"Pathlines\" '(x 283 y 451))(cx-gui-do cx-set-position \"Pathlines\" '(x 283 y 452))(cx-gui-do cx-set-position \"Pathlines\" '(x 283 y 453))(cx-gui-do cx-set-position \"Pathlines\" '(x 283 y 454))(cx-gui-do cx-set-position \"Pathlines\" '(x 283 y 455))(cx-gui-do cx-set-position \"Pathlines\" '(x 283 y 456))(cx-gui-do cx-set-position \"Pathlines\" '(x 283 y 457))(cx-gui-do cx-set-position \"Pathlines\" '(x 282 y 458))(cx-gui-do cx-set-position \"Pathlines\" '(x 282 y 459))(cx-gui-do cx-set-position \"Pathlines\" '(x 282 y 460))(cx-gui-do cx-set-position \"Pathlines\" '(x 282 y 461))(cx-gui-do cx-set-position \"Pathlines\" '(x 282 y 462))(cx-gui-do cx-set-position \"Pathlines\" '(x 282 y 463))(cx-gui-do cx-set-position \"Pathlines\" '(x 282 y 464))(cx-gui-do cx-set-position \"Pathlines\" '(x 282 y 466))(cx-gui-do cx-set-position \"Pathlines\" '(x 281 y 467))(cx-gui-do cx-set-position \"Pathlines\" '(x 281 y 468))(cx-gui-do cx-set-position \"Pathlines\" '(x 281 y 470))(cx-gui-do cx-set-position \"Pathlines\" '(x 281 y 471))(cx-gui-do cx-set-position \"Pathlines\" '(x 281 y 472))(cx-gui-do cx-set-position \"Pathlines\" '(x 280 y 473))(cx-gui-do cx-set-position \"Pathlines\" '(x 280 y 475))(cx-gui-do cx-set-position \"Pathlines\" '(x 280 y 476))(cx-gui-do cx-set-position \"Pathlines\" '(x 280 y 477))(cx-gui-do cx-set-position \"Pathlines\" '(x 279 y 478))(cx-gui-do cx-set-position \"Pathlines\" '(x 279 y 480))(cx-gui-do cx-set-position \"Pathlines\" '(x 279 y 482))(cx-gui-do cx-set-position \"Pathlines\" '(x 279 y 484))(cx-gui-do cx-set-position \"Pathlines\" '(x 278 y 485))(cx-gui-do cx-set-position \"Pathlines\" '(x 278 y 487))(cx-gui-do cx-set-position \"Pathlines\" '(x 278 y 489))(cx-gui-do cx-set-position \"Pathlines\" '(x 278 y 491))(cx-gui-do cx-set-position \"Pathlines\" '(x 278 y 493))(cx-gui-do cx-set-position \"Pathlines\" '(x 278 y 495))(cx-gui-do cx-set-position \"Pathlines\" '(x 278 y 497))(cx-gui-do cx-set-position \"Pathlines\" '(x 278 y 499))(cx-gui-do cx-set-position \"Pathlines\" '(x 278 y 501))(cx-gui-do cx-set-position \"Pathlines\" '(x 278 y 503))(cx-gui-do cx-set-position \"Pathlines\" '(x 278 y 505))(cx-gui-do cx-set-position \"Pathlines\" '(x 278 y 507))(cx-gui-do cx-set-position \"Pathlines\" '(x 278 y 509))(cx-gui-do cx-set-position \"Pathlines\" '(x 277 y 512))(cx-gui-do cx-set-position \"Pathlines\" '(x 277 y 514))(cx-gui-do cx-set-position \"Pathlines\" '(x 277 y 516))(cx-gui-do cx-set-position \"Pathlines\" '(x 277 y 518))(cx-gui-do cx-set-position \"Pathlines\" '(x 276 y 520))(cx-gui-do cx-set-position \"Pathlines\" '(x 276 y 523))(cx-gui-do cx-set-position \"Pathlines\" '(x 275 y 525))(cx-gui-do cx-set-position \"Pathlines\" '(x 275 y 527))(cx-gui-do cx-set-position \"Pathlines\" '(x 275 y 529))(cx-gui-do cx-set-position \"Pathlines\" '(x 274 y 532))(cx-gui-do cx-set-position \"Pathlines\" '(x 274 y 534))(cx-gui-do cx-set-position \"Pathlines\" '(x 273 y 536))(cx-gui-do cx-set-position \"Pathlines\" '(x 272 y 539))(cx-gui-do cx-set-position \"Pathlines\" '(x 272 y 541))(cx-gui-do cx-set-position \"Pathlines\" '(x 272 y 544))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 547))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 550))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 553))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 555))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 558))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 561))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 564))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 567))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 570))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 572))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 575))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 578))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 581))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 584))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 587))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 590))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 593))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 596))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 600))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 603))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 605))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 608))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 611))(cx-gui-do cx-set-position \"Pathlines\" '(x 270 y 614))(cx-gui-do cx-set-position \"Pathlines\" '(x 270 y 616))(cx-gui-do cx-set-position \"Pathlines\" '(x 269 y 619))(cx-gui-do cx-set-position \"Pathlines\" '(x 269 y 622))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 624))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 627))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 629))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 632))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 634))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 637))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 639))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 641))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 644))(cx-gui-do cx-set-position \"Pathlines\" '(x 267 y 646))(cx-gui-do cx-set-position \"Pathlines\" '(x 267 y 648))(cx-gui-do cx-set-position \"Pathlines\" '(x 267 y 650))(cx-gui-do cx-set-position \"Pathlines\" '(x 267 y 653))(cx-gui-do cx-set-position \"Pathlines\" '(x 267 y 655))(cx-gui-do cx-set-position \"Pathlines\" '(x 267 y 657))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 658))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 661))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 662))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 664))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 666))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 668))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 670))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 671))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 673))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 675))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 676))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 678))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 680))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 682))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 683))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 685))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 686))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 688))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 689))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 691))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 692))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 693))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 695))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 696))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 698))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 699))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 701))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 702))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 703))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 705))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 706))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 707))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 708))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 709))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 710))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 712))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 713))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 714))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 715))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 716))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 717))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 718))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 719))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 720))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 721))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 722))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 723))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 724))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 725))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 726))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 727))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 728))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 729))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 730))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 731))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 732))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 733))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 734))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 735))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 736))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 737))(cx-gui-do cx-set-position \"Pathlines\" '(x 265 y 737))(cx-gui-do cx-set-position \"Pathlines\" '(x 265 y 738))(cx-gui-do cx-set-position \"Pathlines\" '(x 265 y 739))(cx-gui-do cx-set-position \"Pathlines\" '(x 265 y 740))(cx-gui-do cx-set-position \"Pathlines\" '(x 264 y 741))(cx-gui-do cx-set-position \"Pathlines\" '(x 264 y 742))(cx-gui-do cx-set-position \"Pathlines\" '(x 264 y 743))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 744))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 743))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 742))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 741))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 740))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 739))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 738))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 737))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 736))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 735))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 734))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 733))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 732))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 731))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 730))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 729))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 728))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 727))(cx-gui-do cx-set-position \"Pathlines\" '(x 264 y 727))(cx-gui-do cx-set-position \"Pathlines\" '(x 264 y 726))(cx-gui-do cx-set-position \"Pathlines\" '(x 264 y 725))(cx-gui-do cx-set-position \"Pathlines\" '(x 264 y 724))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 724))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 723))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 722))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 721))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 720))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 719))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 718))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 717))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 716))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 715))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 714))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 713))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 712))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 711))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 710))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 709))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 708))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 707))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 706))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 705))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 704))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 703))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 702))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 701))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 700))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 699))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 698))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 697))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 696))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 695))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 694))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 693))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 692))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 691))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 690))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 689))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 688))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 687))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 686))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 685))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 684))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 683))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 682))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 681))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 680))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 679))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 678))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 677))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 676))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 675))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 674))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 673))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 672))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 671))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 670))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 669))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 668))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 667))(cx-gui-do cx-set-position \"Pathlines\" '(x 264 y 667))(cx-gui-do cx-set-position \"Pathlines\" '(x 264 y 666))(cx-gui-do cx-set-position \"Pathlines\" '(x 264 y 665))(cx-gui-do cx-set-position \"Pathlines\" '(x 264 y 664))(cx-gui-do cx-set-position \"Pathlines\" '(x 264 y 663))(cx-gui-do cx-set-position \"Pathlines\" '(x 264 y 662))(cx-gui-do cx-set-position \"Pathlines\" '(x 264 y 661))(cx-gui-do cx-set-position \"Pathlines\" '(x 264 y 660))(cx-gui-do cx-set-position \"Pathlines\" '(x 264 y 659))(cx-gui-do cx-set-position \"Pathlines\" '(x 264 y 658))(cx-gui-do cx-set-position \"Pathlines\" '(x 264 y 657))(cx-gui-do cx-set-position \"Pathlines\" '(x 264 y 656))(cx-gui-do cx-set-position \"Pathlines\" '(x 264 y 655))(cx-gui-do cx-set-position \"Pathlines\" '(x 264 y 654))(cx-gui-do cx-set-position \"Pathlines\" '(x 265 y 654))(cx-gui-do cx-set-position \"Pathlines\" '(x 265 y 653))(cx-gui-do cx-set-position \"Pathlines\" '(x 265 y 652))(cx-gui-do cx-set-position \"Pathlines\" '(x 265 y 651))(cx-gui-do cx-set-position \"Pathlines\" '(x 265 y 650))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 650))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 649))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 648))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 647))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 646))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 645))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 644))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 643))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 642))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 641))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 640))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 639))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 638))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 637))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 636))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 635))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 634))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 633))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 632))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 631))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 630))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 629))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 628))(cx-gui-do cx-set-position \"Pathlines\" '(x 265 y 628))(cx-gui-do cx-set-position \"Pathlines\" '(x 265 y 627))(cx-gui-do cx-set-position \"Pathlines\" '(x 265 y 626))(cx-gui-do cx-set-position \"Pathlines\" '(x 265 y 625))(cx-gui-do cx-set-position \"Pathlines\" '(x 265 y 624))(cx-gui-do cx-set-position \"Pathlines\" '(x 265 y 623))(cx-gui-do cx-set-position \"Pathlines\" '(x 265 y 622))(cx-gui-do cx-set-position \"Pathlines\" '(x 265 y 621))(cx-gui-do cx-set-position \"Pathlines\" '(x 265 y 620))(cx-gui-do cx-set-position \"Pathlines\" '(x 265 y 619))(cx-gui-do cx-set-position \"Pathlines\" '(x 265 y 618))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 617))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 616))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 615))(cx-gui-do cx-set-position \"Pathlines\" '(x 267 y 614))(cx-gui-do cx-set-position \"Pathlines\" '(x 267 y 613))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 612))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 611))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 610))(cx-gui-do cx-set-position \"Pathlines\" '(x 269 y 610))(cx-gui-do cx-set-position \"Pathlines\" '(x 269 y 609))(cx-gui-do cx-set-position \"Pathlines\" '(x 269 y 608))(cx-gui-do cx-set-position \"Pathlines\" '(x 269 y 607))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 607))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 606))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 605))(cx-gui-do cx-set-position \"Pathlines\" '(x 269 y 605))(cx-gui-do cx-set-position \"Pathlines\" '(x 269 y 604))(cx-gui-do cx-set-position \"Pathlines\" '(x 269 y 603))(cx-gui-do cx-set-position \"Pathlines\" '(x 269 y 602))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 602))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 601))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 600))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 599))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 598))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 597))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 596))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 595))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 594))(cx-gui-do cx-set-position \"Pathlines\" '(x 269 y 593))(cx-gui-do cx-set-position \"Pathlines\" '(x 269 y 592))(cx-gui-do cx-set-position \"Pathlines\" '(x 269 y 590))(cx-gui-do cx-set-position \"Pathlines\" '(x 269 y 589))(cx-gui-do cx-set-position \"Pathlines\" '(x 270 y 588))(cx-gui-do cx-set-position \"Pathlines\" '(x 270 y 586))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 585))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 583))(cx-gui-do cx-set-position \"Pathlines\" '(x 272 y 582))(cx-gui-do cx-set-position \"Pathlines\" '(x 273 y 580))(cx-gui-do cx-set-position \"Pathlines\" '(x 273 y 579))(cx-gui-do cx-set-position \"Pathlines\" '(x 274 y 578))(cx-gui-do cx-set-position \"Pathlines\" '(x 275 y 577))(cx-gui-do cx-set-position \"Pathlines\" '(x 275 y 576))(cx-gui-do cx-set-position \"Pathlines\" '(x 276 y 575))(cx-gui-do cx-set-position \"Pathlines\" '(x 277 y 573))(cx-gui-do cx-set-position \"Pathlines\" '(x 278 y 572))(cx-gui-do cx-set-position \"Pathlines\" '(x 279 y 570))(cx-gui-do cx-set-position \"Pathlines\" '(x 280 y 568))(cx-gui-do cx-set-position \"Pathlines\" '(x 280 y 566))(cx-gui-do cx-set-position \"Pathlines\" '(x 282 y 564))(cx-gui-do cx-set-position \"Pathlines\" '(x 283 y 562))(cx-gui-do cx-set-position \"Pathlines\" '(x 283 y 560))(cx-gui-do cx-set-position \"Pathlines\" '(x 285 y 558))(cx-gui-do cx-set-position \"Pathlines\" '(x 286 y 556))(cx-gui-do cx-set-position \"Pathlines\" '(x 287 y 554))(cx-gui-do cx-set-position \"Pathlines\" '(x 288 y 552))(cx-gui-do cx-set-position \"Pathlines\" '(x 289 y 550))(cx-gui-do cx-set-position \"Pathlines\" '(x 290 y 547))(cx-gui-do cx-set-position \"Pathlines\" '(x 291 y 545))(cx-gui-do cx-set-position \"Pathlines\" '(x 292 y 543))(cx-gui-do cx-set-position \"Pathlines\" '(x 293 y 540))(cx-gui-do cx-set-position \"Pathlines\" '(x 294 y 538))(cx-gui-do cx-set-position \"Pathlines\" '(x 295 y 535))(cx-gui-do cx-set-position \"Pathlines\" '(x 297 y 533))(cx-gui-do cx-set-position \"Pathlines\" '(x 298 y 531))(cx-gui-do cx-set-position \"Pathlines\" '(x 299 y 528))(cx-gui-do cx-set-position \"Pathlines\" '(x 300 y 526))(cx-gui-do cx-set-position \"Pathlines\" '(x 302 y 523))(cx-gui-do cx-set-position \"Pathlines\" '(x 303 y 521))(cx-gui-do cx-set-position \"Pathlines\" '(x 304 y 519))(cx-gui-do cx-set-position \"Pathlines\" '(x 306 y 516))(cx-gui-do cx-set-position \"Pathlines\" '(x 307 y 514))(cx-gui-do cx-set-position \"Pathlines\" '(x 308 y 511))(cx-gui-do cx-set-position \"Pathlines\" '(x 309 y 509))(cx-gui-do cx-set-position \"Pathlines\" '(x 311 y 506))(cx-gui-do cx-set-position \"Pathlines\" '(x 312 y 504))(cx-gui-do cx-set-position \"Pathlines\" '(x 313 y 501))(cx-gui-do cx-set-position \"Pathlines\" '(x 314 y 499))(cx-gui-do cx-set-position \"Pathlines\" '(x 316 y 497))(cx-gui-do cx-set-position \"Pathlines\" '(x 317 y 495))(cx-gui-do cx-set-position \"Pathlines\" '(x 318 y 492))(cx-gui-do cx-set-position \"Pathlines\" '(x 319 y 490))(cx-gui-do cx-set-position \"Pathlines\" '(x 321 y 487))(cx-gui-do cx-set-position \"Pathlines\" '(x 322 y 485))(cx-gui-do cx-set-position \"Pathlines\" '(x 324 y 483))(cx-gui-do cx-set-position \"Pathlines\" '(x 325 y 481))(cx-gui-do cx-set-position \"Pathlines\" '(x 327 y 478))(cx-gui-do cx-set-position \"Pathlines\" '(x 328 y 476))(cx-gui-do cx-set-position \"Pathlines\" '(x 329 y 474))(cx-gui-do cx-set-position \"Pathlines\" '(x 331 y 472))(cx-gui-do cx-set-position \"Pathlines\" '(x 332 y 471))(cx-gui-do cx-set-position \"Pathlines\" '(x 333 y 468))(cx-gui-do cx-set-position \"Pathlines\" '(x 334 y 466))(cx-gui-do cx-set-position \"Pathlines\" '(x 335 y 464))(cx-gui-do cx-set-position \"Pathlines\" '(x 336 y 463))(cx-gui-do cx-set-position \"Pathlines\" '(x 337 y 460))(cx-gui-do cx-set-position \"Pathlines\" '(x 338 y 458))(cx-gui-do cx-set-position \"Pathlines\" '(x 339 y 456))(cx-gui-do cx-set-position \"Pathlines\" '(x 340 y 454))(cx-gui-do cx-set-position \"Pathlines\" '(x 341 y 453))(cx-gui-do cx-set-position \"Pathlines\" '(x 342 y 451))(cx-gui-do cx-set-position \"Pathlines\" '(x 343 y 449))(cx-gui-do cx-set-position \"Pathlines\" '(x 344 y 448))(cx-gui-do cx-set-position \"Pathlines\" '(x 344 y 446))(cx-gui-do cx-set-position \"Pathlines\" '(x 345 y 445))(cx-gui-do cx-set-position \"Pathlines\" '(x 346 y 444))(cx-gui-do cx-set-position \"Pathlines\" '(x 346 y 442))(cx-gui-do cx-set-position \"Pathlines\" '(x 347 y 442))(cx-gui-do cx-set-position \"Pathlines\" '(x 348 y 440))(cx-gui-do cx-set-position \"Pathlines\" '(x 349 y 439))(cx-gui-do cx-set-position \"Pathlines\" '(x 349 y 437))(cx-gui-do cx-set-position \"Pathlines\" '(x 350 y 436))(cx-gui-do cx-set-position \"Pathlines\" '(x 351 y 434))(cx-gui-do cx-set-position \"Pathlines\" '(x 352 y 433))(cx-gui-do cx-set-position \"Pathlines\" '(x 352 y 431))(cx-gui-do cx-set-position \"Pathlines\" '(x 353 y 430))(cx-gui-do cx-set-position \"Pathlines\" '(x 353 y 429))(cx-gui-do cx-set-position \"Pathlines\" '(x 354 y 427))(cx-gui-do cx-set-position \"Pathlines\" '(x 355 y 426))(cx-gui-do cx-set-position \"Pathlines\" '(x 355 y 425))(cx-gui-do cx-set-position \"Pathlines\" '(x 355 y 423))(cx-gui-do cx-set-position \"Pathlines\" '(x 356 y 422))(cx-gui-do cx-set-position \"Pathlines\" '(x 356 y 421))(cx-gui-do cx-set-position \"Pathlines\" '(x 357 y 420))(cx-gui-do cx-set-position \"Pathlines\" '(x 357 y 419))(cx-gui-do cx-set-position \"Pathlines\" '(x 358 y 418))(cx-gui-do cx-set-position \"Pathlines\" '(x 358 y 417))(cx-gui-do cx-set-position \"Pathlines\" '(x 358 y 416))(cx-gui-do cx-set-position \"Pathlines\" '(x 358 y 415))(cx-gui-do cx-set-position \"Pathlines\" '(x 359 y 414))(cx-gui-do cx-set-position \"Pathlines\" '(x 359 y 413))(cx-gui-do cx-set-position \"Pathlines\" '(x 360 y 412))(cx-gui-do cx-set-position \"Pathlines\" '(x 360 y 411))(cx-gui-do cx-set-position \"Pathlines\" '(x 361 y 409))(cx-gui-do cx-set-position \"Pathlines\" '(x 361 y 408))(cx-gui-do cx-set-position \"Pathlines\" '(x 362 y 407))(cx-gui-do cx-set-position \"Pathlines\" '(x 362 y 406))(cx-gui-do cx-set-position \"Pathlines\" '(x 363 y 405))(cx-gui-do cx-set-position \"Pathlines\" '(x 363 y 404))(cx-gui-do cx-set-position \"Pathlines\" '(x 364 y 403))(cx-gui-do cx-set-position \"Pathlines\" '(x 364 y 402))(cx-gui-do cx-set-position \"Pathlines\" '(x 365 y 401))(cx-gui-do cx-set-position \"Pathlines\" '(x 365 y 400))(cx-gui-do cx-set-position \"Pathlines\" '(x 365 y 399))(cx-gui-do cx-set-position \"Pathlines\" '(x 366 y 398))(cx-gui-do cx-set-position \"Pathlines\" '(x 366 y 397))(cx-gui-do cx-set-position \"Pathlines\" '(x 367 y 397))(cx-gui-do cx-set-position \"Pathlines\" '(x 367 y 396))(cx-gui-do cx-set-position \"Pathlines\" '(x 367 y 395))(cx-gui-do cx-set-position \"Pathlines\" '(x 368 y 394))(cx-gui-do cx-set-position \"Pathlines\" '(x 368 y 393))(cx-gui-do cx-set-position \"Pathlines\" '(x 369 y 393))(cx-gui-do cx-set-position \"Pathlines\" '(x 369 y 392))(cx-gui-do cx-set-position \"Pathlines\" '(x 369 y 391))(cx-gui-do cx-set-position \"Pathlines\" '(x 370 y 390))(cx-gui-do cx-set-position \"Pathlines\" '(x 370 y 389))(cx-gui-do cx-set-position \"Pathlines\" '(x 370 y 388))(cx-gui-do cx-set-position \"Pathlines\" '(x 370 y 387))(cx-gui-do cx-set-position \"Pathlines\" '(x 371 y 387))(cx-gui-do cx-set-position \"Pathlines\" '(x 371 y 386))(cx-gui-do cx-set-position \"Pathlines\" '(x 371 y 385))(cx-gui-do cx-set-position \"Pathlines\" '(x 372 y 385))(cx-gui-do cx-set-position \"Pathlines\" '(x 372 y 384))(cx-gui-do cx-set-position \"Pathlines\" '(x 372 y 383))(cx-gui-do cx-set-position \"Pathlines\" '(x 372 y 382))(cx-gui-do cx-set-position \"Pathlines\" '(x 373 y 382))(cx-gui-do cx-set-position \"Pathlines\" '(x 373 y 381))(cx-gui-do cx-set-position \"Pathlines\" '(x 373 y 380))(cx-gui-do cx-set-position \"Pathlines\" '(x 373 y 379))(cx-gui-do cx-set-position \"Pathlines\" '(x 373 y 378))(cx-gui-do cx-set-position \"Pathlines\" '(x 373 y 377))(cx-gui-do cx-set-position \"Pathlines\" '(x 373 y 376))(cx-gui-do cx-set-position \"Pathlines\" '(x 373 y 375))(cx-gui-do cx-set-position \"Pathlines\" '(x 373 y 374))(cx-gui-do cx-activate-item \"Pathlines*PanelButtons*PushButton2(Cancel)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|fuel-inlet (mass-flow-inlet)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*TypeSubMenu*pressure-inlet")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "pressure-inlet-19-1*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|fuel-inlet (pressure-inlet)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*TypeSubMenu*mass-flow-inlet")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"mass-flow-inlet-19-1*Frame4*Frame1(Momentum)*Frame1*Table1*DropDownList12(Direction Specification Method)\" '( 1))(cx-gui-do cx-activate-item \"mass-flow-inlet-19-1*Frame4*Frame1(Momentum)*Frame1*Table1*DropDownList12(Direction Specification Method)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"mass-flow-inlet-19-1*Frame4*Frame1(Momentum)*Frame1*Table1*Frame8*Table8*RealEntry2(Mass Flow Rate)\" '( 0.01))(cx-gui-do cx-activate-item \"mass-flow-inlet-19-1*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Frame1*Table1*ButtonBox10*PushButton2(Initialize)")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")(cx-gui-do cx-activate-item "Error*OK")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 4))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")(cx-gui-do cx-activate-item "Error*OK")(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|fuel-inlet (mass-flow-inlet)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*TypeSubMenu*velocity-inlet")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"velocity-inlet-19-1*Frame4*Frame1(Momentum)*Frame1*Table1*Frame12*Table12*RealEntry2(Velocity Magnitude)\" '( 5))(cx-gui-do cx-activate-item \"velocity-inlet-19-1*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Frame1*Table1*ButtonBox10*PushButton2(Initialize)")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Calculate")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")(cx-gui-do cx-activate-item "Error*OK")(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|fuel-inlet (velocity-inlet)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|fuel-inlet (velocity-inlet)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-fuel-inlet (mass-flow-inlet)*Edit...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "velocity-inlet-19-1*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer Tools*zoom")')
setup2.SendCommand(Command="""(cx-use-window-id 1)(cx-set-camera '(0.0124281 0.001068 0.0137622) '(0.0124281 0.001068 0) '(2.79397e-009 1 0) 0.00550486 0.00550486 \"perspective\")
(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Cell Zone Conditions|surface_body (fluid)\"))""")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions|surface_body (fluid)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "fluid-2-1*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Cell Zone Conditions"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Frame1*Table1*Frame2*Table2*Frame4*Table4*Frame2*Table2*PushButton2(Operating Conditions)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Operating Conditions*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|air-inlet (velocity-inlet)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|air-inlet (velocity-inlet)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "velocity-inlet-5-1*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|fuel-inlet (velocity-inlet)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|fuel-inlet (velocity-inlet)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"velocity-inlet-19-1*Frame4*Frame1(Momentum)*Frame1*Table1*Frame12*Table12*RealEntry2(Velocity Magnitude)\" '( 500))(cx-gui-do cx-activate-item \"velocity-inlet-19-1*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")(cx-gui-do cx-activate-item "Error*OK")(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|General"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "General*Frame1*Table1*Frame2(Solver)*Table2(Solver)*ButtonBox1(Type)*Density-Based" #f)(cx-gui-do cx-activate-item "General*Frame1*Table1*Frame2(Solver)*Table2(Solver)*ButtonBox1(Type)*Density-Based")(cx-gui-do cx-activate-item "Question*Cancel")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Error*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "General*Frame1*Table1*Frame2(Solver)*Table2(Solver)*ButtonBox1(Type)*Pressure-Based" #f)(cx-gui-do cx-activate-item "General*Frame1*Table1*Frame2(Solver)*Table2(Solver)*ButtonBox1(Type)*Pressure-Based")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "General*Frame1*Table1*Frame3*PushButton2(Units)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Set Units*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "General*Frame1*Table1*Frame2(Solver)*Table2(Solver)*ToggleBox5(Time)*Transient" #f)(cx-gui-do cx-activate-item "General*Frame1*Table1*Frame2(Solver)*Table2(Solver)*ToggleBox5(Time)*Transient")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "General*Frame1*Table1*Frame2(Solver)*Table2(Solver)*ToggleBox5(Time)*Steady" #f)(cx-gui-do cx-activate-item "General*Frame1*Table1*Frame2(Solver)*Table2(Solver)*ToggleBox5(Time)*Steady")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "General*Frame1*Table1*Frame1(Mesh)*ButtonBox1(Mesh)*PushButton2(Display)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Frame2*Frame1*List1(Surfaces)\" '( 4 5))(cx-gui-do cx-activate-item \"Mesh Display*Frame2*Frame1*List1(Surfaces)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Frame2*Frame1*List1(Surfaces)\" '( 5))(cx-gui-do cx-activate-item \"Mesh Display*Frame2*Frame1*List1(Surfaces)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Frame2*Frame1*List1(Surfaces)\" '())(cx-gui-do cx-activate-item \"Mesh Display*Frame2*Frame1*List1(Surfaces)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Mesh Display*Frame2*Frame1*List1(Surfaces)\" '( 1))(cx-gui-do cx-activate-item \"Mesh Display*Frame2*Frame1*List1(Surfaces)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer Tools*rollzoom")')
setup2.SendCommand(Command="""(cx-use-window-id 1)(cx-set-camera '(0.0124281 0.001068 0.0298921) '(0.0124281 0.001068 0) '(2.79397e-009 1 0) 0.0119568 0.0119568 \"perspective\")
(cx-use-window-id 1)(cx-set-camera '(0.0124281 0.001068 0.0683631) '(0.0124281 0.001068 0) '(2.79397e-009 1 0) 0.0273452 0.0273452 \"perspective\")""")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer Tools*rollzoom")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer Tools*translate")')
setup2.SendCommand(Command="(cx-use-window-id 1)(dolly-camera 0.0113706 -0.00525667 0)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer Tools*translate")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|fuel-inlet (velocity-inlet)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|fuel-inlet (velocity-inlet)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"velocity-inlet-19-1*Frame4*Frame1(Momentum)*Frame1*Table1*Frame13*Table13*RealEntry2(Supersonic/Initial Gauge Pressure)\" '( 5))(cx-gui-do cx-activate-item \"velocity-inlet-19-1*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Frame1*Table1*IntegerEntry9(Number of Iterations)" 100)(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*IntegerEntry9(Number of Iterations)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")(cx-gui-do cx-activate-item "Error*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton5(Draw Mesh)" #f)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton5(Draw Mesh)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")(cx-gui-do cx-activate-item "Error*OK")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 4))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton5(Draw Mesh)" #t)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton5(Draw Mesh)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton7(Relative Pathlines)" #t)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton7(Relative Pathlines)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton7(Relative Pathlines)" #f)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton7(Relative Pathlines)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton8(XY Plot)" #f)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton8(XY Plot)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton8(XY Plot)" #t)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton8(XY Plot)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton3(Node Values)" #t)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton3(Node Values)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton3(Node Values)" #f)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton3(Node Values)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton2(Reverse)" #f)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton2(Reverse)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '())(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 3))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 6))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|fuel-inlet (velocity-inlet)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|fuel-inlet (velocity-inlet)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*TypeSubMenu*mass-flow-inlet")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"mass-flow-inlet-19-1*Frame4*Frame1(Momentum)*Frame1*Table1*Frame8*Table8*RealEntry2(Mass Flow Rate)\" '( 0.01))")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"mass-flow-inlet-19-1*Frame4*Frame1(Momentum)*Frame1*Table1*DropDownList12(Direction Specification Method)\" '( 1))(cx-gui-do cx-activate-item \"mass-flow-inlet-19-1*Frame4*Frame1(Momentum)*Frame1*Table1*DropDownList12(Direction Specification Method)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "mass-flow-inlet-19-1*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 5))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList2\" '( 1))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList2\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 1))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 4))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList2\" '( 2))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList2\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(Pulse)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(Pulse)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList2\" '( 0))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList2\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(Compute)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 3))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton2(Reverse)" #t)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton2(Reverse)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '())(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 2))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 0 2))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 2))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")(cx-gui-do cx-activate-item "Error*OK")(cx-gui-do cx-activate-item "Error*OK")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '())(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 0 4))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame4(Pulse Mode)*ButtonBox4(Pulse Mode)*Continuous" #f)(cx-gui-do cx-activate-item "Pathlines*Frame4(Pulse Mode)*ButtonBox4(Pulse Mode)*Continuous")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(Pulse)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(Pulse)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 4))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(Pulse)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(Pulse)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models"))')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Models*Frame1*Table1*Frame1*List1(Models)\" '( 2))(cx-gui-do cx-activate-item \"Models*Frame1*Table1*Frame1*List1(Models)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Models*Frame1*Table1*PushButton2(Edit)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Viscous Model*Frame1*Table1*Frame1(Model)*ToggleBox1(Model)*Detached Eddy Simulation (DES)" #f)(cx-gui-do cx-activate-item "Viscous Model*Frame1*Table1*Frame1(Model)*ToggleBox1(Model)*Detached Eddy Simulation (DES)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Viscous Model*Frame1*Table1*Frame4(RANS Model)*ToggleBox4(RANS Model)*Realizable k-epsilon" #f)(cx-gui-do cx-activate-item "Viscous Model*Frame1*Table1*Frame4(RANS Model)*ToggleBox4(RANS Model)*Realizable k-epsilon")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Viscous Model*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-position \"Pathlines\" '(x 371 y 378))(cx-gui-do cx-set-position \"Pathlines\" '(x 371 y 379))(cx-gui-do cx-set-position \"Pathlines\" '(x 371 y 380))(cx-gui-do cx-set-position \"Pathlines\" '(x 371 y 381))(cx-gui-do cx-set-position \"Pathlines\" '(x 371 y 382))(cx-gui-do cx-set-position \"Pathlines\" '(x 371 y 383))(cx-gui-do cx-set-position \"Pathlines\" '(x 371 y 384))(cx-gui-do cx-set-position \"Pathlines\" '(x 371 y 385))(cx-gui-do cx-set-position \"Pathlines\" '(x 370 y 386))(cx-gui-do cx-set-position \"Pathlines\" '(x 370 y 387))(cx-gui-do cx-set-position \"Pathlines\" '(x 370 y 388))(cx-gui-do cx-set-position \"Pathlines\" '(x 370 y 389))(cx-gui-do cx-set-position \"Pathlines\" '(x 370 y 390))(cx-gui-do cx-set-position \"Pathlines\" '(x 370 y 391))(cx-gui-do cx-set-position \"Pathlines\" '(x 370 y 392))(cx-gui-do cx-set-position \"Pathlines\" '(x 370 y 393))(cx-gui-do cx-set-position \"Pathlines\" '(x 370 y 394))(cx-gui-do cx-set-position \"Pathlines\" '(x 370 y 395))(cx-gui-do cx-set-position \"Pathlines\" '(x 370 y 396))(cx-gui-do cx-set-position \"Pathlines\" '(x 370 y 397))(cx-gui-do cx-set-position \"Pathlines\" '(x 370 y 398))(cx-gui-do cx-set-position \"Pathlines\" '(x 370 y 400))(cx-gui-do cx-set-position \"Pathlines\" '(x 370 y 401))(cx-gui-do cx-set-position \"Pathlines\" '(x 369 y 403))(cx-gui-do cx-set-position \"Pathlines\" '(x 369 y 404))(cx-gui-do cx-set-position \"Pathlines\" '(x 368 y 406))(cx-gui-do cx-set-position \"Pathlines\" '(x 367 y 408))(cx-gui-do cx-set-position \"Pathlines\" '(x 367 y 409))(cx-gui-do cx-set-position \"Pathlines\" '(x 366 y 411))(cx-gui-do cx-set-position \"Pathlines\" '(x 365 y 413))(cx-gui-do cx-set-position \"Pathlines\" '(x 365 y 414))(cx-gui-do cx-set-position \"Pathlines\" '(x 364 y 416))(cx-gui-do cx-set-position \"Pathlines\" '(x 363 y 418))(cx-gui-do cx-set-position \"Pathlines\" '(x 363 y 419))(cx-gui-do cx-set-position \"Pathlines\" '(x 363 y 421))(cx-gui-do cx-set-position \"Pathlines\" '(x 362 y 423))(cx-gui-do cx-set-position \"Pathlines\" '(x 362 y 425))(cx-gui-do cx-set-position \"Pathlines\" '(x 361 y 428))(cx-gui-do cx-set-position \"Pathlines\" '(x 361 y 430))(cx-gui-do cx-set-position \"Pathlines\" '(x 360 y 432))(cx-gui-do cx-set-position \"Pathlines\" '(x 359 y 434))(cx-gui-do cx-set-position \"Pathlines\" '(x 359 y 436))(cx-gui-do cx-set-position \"Pathlines\" '(x 358 y 439))(cx-gui-do cx-set-position \"Pathlines\" '(x 357 y 442))(cx-gui-do cx-set-position \"Pathlines\" '(x 356 y 444))(cx-gui-do cx-set-position \"Pathlines\" '(x 355 y 446))(cx-gui-do cx-set-position \"Pathlines\" '(x 354 y 449))(cx-gui-do cx-set-position \"Pathlines\" '(x 353 y 451))(cx-gui-do cx-set-position \"Pathlines\" '(x 353 y 454))(cx-gui-do cx-set-position \"Pathlines\" '(x 352 y 456))(cx-gui-do cx-set-position \"Pathlines\" '(x 351 y 459))(cx-gui-do cx-set-position \"Pathlines\" '(x 350 y 461))(cx-gui-do cx-set-position \"Pathlines\" '(x 350 y 464))(cx-gui-do cx-set-position \"Pathlines\" '(x 349 y 466))(cx-gui-do cx-set-position \"Pathlines\" '(x 348 y 469))(cx-gui-do cx-set-position \"Pathlines\" '(x 347 y 471))(cx-gui-do cx-set-position \"Pathlines\" '(x 346 y 474))(cx-gui-do cx-set-position \"Pathlines\" '(x 345 y 476))(cx-gui-do cx-set-position \"Pathlines\" '(x 344 y 479))(cx-gui-do cx-set-position \"Pathlines\" '(x 343 y 482))(cx-gui-do cx-set-position \"Pathlines\" '(x 342 y 484))(cx-gui-do cx-set-position \"Pathlines\" '(x 342 y 487))(cx-gui-do cx-set-position \"Pathlines\" '(x 341 y 490))(cx-gui-do cx-set-position \"Pathlines\" '(x 341 y 493))(cx-gui-do cx-set-position \"Pathlines\" '(x 340 y 496))(cx-gui-do cx-set-position \"Pathlines\" '(x 339 y 499))(cx-gui-do cx-set-position \"Pathlines\" '(x 338 y 502))(cx-gui-do cx-set-position \"Pathlines\" '(x 337 y 505))(cx-gui-do cx-set-position \"Pathlines\" '(x 336 y 508))(cx-gui-do cx-set-position \"Pathlines\" '(x 335 y 512))(cx-gui-do cx-set-position \"Pathlines\" '(x 333 y 515))(cx-gui-do cx-set-position \"Pathlines\" '(x 332 y 518))(cx-gui-do cx-set-position \"Pathlines\" '(x 331 y 520))(cx-gui-do cx-set-position \"Pathlines\" '(x 330 y 523))(cx-gui-do cx-set-position \"Pathlines\" '(x 329 y 526))(cx-gui-do cx-set-position \"Pathlines\" '(x 328 y 529))(cx-gui-do cx-set-position \"Pathlines\" '(x 327 y 532))(cx-gui-do cx-set-position \"Pathlines\" '(x 326 y 535))(cx-gui-do cx-set-position \"Pathlines\" '(x 325 y 537))(cx-gui-do cx-set-position \"Pathlines\" '(x 324 y 540))(cx-gui-do cx-set-position \"Pathlines\" '(x 323 y 543))(cx-gui-do cx-set-position \"Pathlines\" '(x 321 y 545))(cx-gui-do cx-set-position \"Pathlines\" '(x 320 y 548))(cx-gui-do cx-set-position \"Pathlines\" '(x 318 y 551))(cx-gui-do cx-set-position \"Pathlines\" '(x 317 y 554))(cx-gui-do cx-set-position \"Pathlines\" '(x 315 y 557))(cx-gui-do cx-set-position \"Pathlines\" '(x 314 y 560))(cx-gui-do cx-set-position \"Pathlines\" '(x 312 y 562))(cx-gui-do cx-set-position \"Pathlines\" '(x 310 y 565))(cx-gui-do cx-set-position \"Pathlines\" '(x 309 y 568))(cx-gui-do cx-set-position \"Pathlines\" '(x 308 y 570))(cx-gui-do cx-set-position \"Pathlines\" '(x 307 y 572))(cx-gui-do cx-set-position \"Pathlines\" '(x 306 y 575))(cx-gui-do cx-set-position \"Pathlines\" '(x 305 y 577))(cx-gui-do cx-set-position \"Pathlines\" '(x 304 y 579))(cx-gui-do cx-set-position \"Pathlines\" '(x 303 y 581))(cx-gui-do cx-set-position \"Pathlines\" '(x 302 y 583))(cx-gui-do cx-set-position \"Pathlines\" '(x 300 y 585))(cx-gui-do cx-set-position \"Pathlines\" '(x 299 y 588))(cx-gui-do cx-set-position \"Pathlines\" '(x 298 y 590))(cx-gui-do cx-set-position \"Pathlines\" '(x 296 y 592))(cx-gui-do cx-set-position \"Pathlines\" '(x 295 y 594))(cx-gui-do cx-set-position \"Pathlines\" '(x 294 y 596))(cx-gui-do cx-set-position \"Pathlines\" '(x 293 y 597))(cx-gui-do cx-set-position \"Pathlines\" '(x 292 y 599))(cx-gui-do cx-set-position \"Pathlines\" '(x 292 y 600))(cx-gui-do cx-set-position \"Pathlines\" '(x 291 y 602))(cx-gui-do cx-set-position \"Pathlines\" '(x 290 y 603))(cx-gui-do cx-set-position \"Pathlines\" '(x 289 y 605))(cx-gui-do cx-set-position \"Pathlines\" '(x 288 y 606))(cx-gui-do cx-set-position \"Pathlines\" '(x 288 y 607))(cx-gui-do cx-set-position \"Pathlines\" '(x 287 y 608))(cx-gui-do cx-set-position \"Pathlines\" '(x 286 y 609))(cx-gui-do cx-set-position \"Pathlines\" '(x 286 y 610))(cx-gui-do cx-set-position \"Pathlines\" '(x 285 y 611))(cx-gui-do cx-set-position \"Pathlines\" '(x 284 y 613))(cx-gui-do cx-set-position \"Pathlines\" '(x 284 y 614))(cx-gui-do cx-set-position \"Pathlines\" '(x 283 y 615))(cx-gui-do cx-set-position \"Pathlines\" '(x 282 y 615))(cx-gui-do cx-set-position \"Pathlines\" '(x 282 y 616))(cx-gui-do cx-set-position \"Pathlines\" '(x 281 y 617))(cx-gui-do cx-set-position \"Pathlines\" '(x 280 y 618))(cx-gui-do cx-set-position \"Pathlines\" '(x 280 y 619))(cx-gui-do cx-set-position \"Pathlines\" '(x 279 y 620))(cx-gui-do cx-set-position \"Pathlines\" '(x 278 y 621))(cx-gui-do cx-set-position \"Pathlines\" '(x 278 y 622))(cx-gui-do cx-set-position \"Pathlines\" '(x 277 y 623))(cx-gui-do cx-set-position \"Pathlines\" '(x 277 y 624))(cx-gui-do cx-set-position \"Pathlines\" '(x 276 y 624))(cx-gui-do cx-set-position \"Pathlines\" '(x 276 y 625))(cx-gui-do cx-set-position \"Pathlines\" '(x 276 y 626))(cx-gui-do cx-set-position \"Pathlines\" '(x 275 y 627))(cx-gui-do cx-set-position \"Pathlines\" '(x 274 y 628))(cx-gui-do cx-set-position \"Pathlines\" '(x 273 y 629))(cx-gui-do cx-set-position \"Pathlines\" '(x 272 y 630))(cx-gui-do cx-set-position \"Pathlines\" '(x 272 y 631))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 631))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 632))(cx-gui-do cx-set-position \"Pathlines\" '(x 271 y 633))(cx-gui-do cx-set-position \"Pathlines\" '(x 270 y 633))(cx-gui-do cx-set-position \"Pathlines\" '(x 270 y 634))(cx-gui-do cx-set-position \"Pathlines\" '(x 269 y 635))(cx-gui-do cx-set-position \"Pathlines\" '(x 269 y 636))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 636))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 637))(cx-gui-do cx-set-position \"Pathlines\" '(x 268 y 638))(cx-gui-do cx-set-position \"Pathlines\" '(x 267 y 638))(cx-gui-do cx-set-position \"Pathlines\" '(x 267 y 639))(cx-gui-do cx-set-position \"Pathlines\" '(x 267 y 640))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 640))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 641))(cx-gui-do cx-set-position \"Pathlines\" '(x 266 y 642))(cx-gui-do cx-set-position \"Pathlines\" '(x 265 y 642))(cx-gui-do cx-set-position \"Pathlines\" '(x 265 y 643))(cx-gui-do cx-set-position \"Pathlines\" '(x 265 y 644))(cx-gui-do cx-set-position \"Pathlines\" '(x 264 y 645))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 646))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 647))(cx-gui-do cx-set-position \"Pathlines\" '(x 263 y 648))(cx-gui-do cx-set-position \"Pathlines\" '(x 262 y 648))(cx-gui-do cx-set-position \"Pathlines\" '(x 262 y 649))(cx-gui-do cx-set-position \"Pathlines\" '(x 262 y 650))(cx-gui-do cx-set-position \"Pathlines\" '(x 261 y 650))(cx-gui-do cx-set-position \"Pathlines\" '(x 260 y 651))(cx-gui-do cx-set-position \"Pathlines\" '(x 259 y 651))(cx-gui-do cx-set-position \"Pathlines\" '(x 259 y 652))(cx-gui-do cx-set-position \"Pathlines\" '(x 258 y 652))(cx-gui-do cx-set-position \"Pathlines\" '(x 258 y 653))(cx-gui-do cx-activate-item \"Pathlines*PanelButtons*PushButton2(Cancel)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Frame1*Table1*IntegerEntry9(Number of Iterations)" 200)(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*IntegerEntry9(Number of Iterations)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Run Calculation*Frame1*Table1*Frame5*Table5*DropDownList1(Time Stepping Method)\" '( 1))(cx-gui-do cx-activate-item \"Run Calculation*Frame1*Table1*Frame5*Table5*DropDownList1(Time Stepping Method)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*Frame5*Table5*PushButton2(Settings)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Adaptive Time Step Settings*Frame1*Table1*RealEntry3(Ending Time)\" '( 10))(cx-gui-do cx-set-integer-entry \"Adaptive Time Step Settings*Frame1*Table1*IntegerEntry8(Number of Fixed Time Steps)\" 0)")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Adaptive Time Step Settings*Frame1*Table1*IntegerEntry8(Number of Fixed Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Adaptive Time Step Settings*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")(cx-gui-do cx-set-toggle-button "Settings have changed!*Frame1*Table1*ToggleBox2*Use settings changes for current and future calculations" #f)(cx-gui-do cx-activate-item "Settings have changed!*Frame1*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Contours*Edit...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Contours*New...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Contours|contour-1"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-contour-1*Edit...")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Contours*Frame2*Frame1(Options)*ToggleBox1(Options)*CheckButton1(Filled)" #f)(cx-gui-do cx-activate-item "Contours*Frame2*Frame1(Options)*ToggleBox1(Options)*CheckButton1(Filled)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-text-entry "Contours*Frame1*TextEntry1(Contour Name)" "temp")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Frame4*Frame3*List3(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Contours*Frame4*Frame3*List3(Surfaces)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Frame4*Frame3*List3(Surfaces)\" '())(cx-gui-do cx-activate-item \"Contours*Frame4*Frame3*List3(Surfaces)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Contours*Frame4*Frame3*List3(Surfaces)\" '( 1))(cx-gui-do cx-activate-item \"Contours*Frame4*Frame3*List3(Surfaces)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Contours*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*General Tools*write")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuWrite*Save Project")(cx-gui-do cx-set-toggle-button "Settings have changed!*Frame1*Table1*ToggleBox2*Use settings changes for current and future calculations" #f)(cx-gui-do cx-activate-item "Settings have changed!*Frame1*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
Save(Overwrite=True)
setup2.SendCommand(Command='(%cx-warning-dialog "OK to close Fluent?" #f)(cx-gui-do cx-activate-item "Warning*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
fluentLauncherSettings2.SetEntityProperties(Properties=Set(EnvPath={}))
setup2.Edit()
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Methods"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models"))')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Models*Frame1*Table1*Frame1*List1(Models)\" '( 2))(cx-gui-do cx-activate-item \"Models*Frame1*Table1*Frame1*List1(Models)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Models*Frame1*Table1*PushButton2(Edit)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Viscous Model*Frame1*Table1*Frame1(Model)*ToggleBox1(Model)*Reynolds Stress" #f)(cx-gui-do cx-activate-item "Viscous Model*Frame1*Table1*Frame1(Model)*ToggleBox1(Model)*Reynolds Stress")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Viscous Model*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Run Calculation\"))(cx-gui-do cx-set-real-entry-list \"Run Calculation*Frame1*Table1*Frame6*Table6*RealEntry1(Time Step Size)\" '( 0.01))(cx-gui-do cx-activate-item \"Run Calculation*Frame1*Table1*Frame6*Table6*RealEntry1(Time Step Size)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Run Calculation*Frame1*Table1*Frame6*Table6*RealEntry1(Time Step Size)\" '( 0.05))(cx-gui-do cx-activate-item \"Run Calculation*Frame1*Table1*Frame6*Table6*RealEntry1(Time Step Size)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Frame1*Table1*Frame6*Table6*IntegerEntry2(Number of Time Steps)" 100)(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*Frame6*Table6*IntegerEntry2(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")(cx-gui-do cx-activate-item "Question*OK")(cx-gui-do cx-activate-item "Working*Cancel")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-integer-entry "Run Calculation*Frame1*Table1*Frame6*Table6*IntegerEntry2(Number of Time Steps)" 10)(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*Frame6*Table6*IntegerEntry2(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")(cx-gui-do cx-set-toggle-button "Settings have changed!*Frame1*Table1*ToggleBox2*Use settings changes for current and future calculations" #f)(cx-gui-do cx-activate-item "Settings have changed!*Frame1*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton2(Reverse)" #f)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton2(Reverse)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton2(Reverse)" #t)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton2(Reverse)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 0 4))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 4))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 3))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*Frame5*PushButton2(Attributes)")(cx-gui-do cx-activate-item "Path Style Attributes*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 4))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer Tools*zoom")')
setup2.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera '(0.0252325 0.00473791 0.0552608) '(0.0252325 0.00473791 0) '(-4.62862e-008 1 0) 0.0221043 0.0221043 \"perspective\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Pointer Tools*translate")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(Pulse)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(Pulse)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|fuel-inlet (mass-flow-inlet)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|fuel-inlet (mass-flow-inlet)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"mass-flow-inlet-19-1*Frame4*Frame1(Momentum)*Frame1*Table1*DropDownList12(Direction Specification Method)\" '( 0))(cx-gui-do cx-activate-item \"mass-flow-inlet-19-1*Frame4*Frame1(Momentum)*Frame1*Table1*DropDownList12(Direction Specification Method)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"mass-flow-inlet-19-1*Frame4*Frame1(Momentum)*Frame1*Table1*Frame15*Table15*RealEntry2(Y-Component of Flow Direction)\" '( 0.1))(cx-gui-do cx-activate-item \"mass-flow-inlet-19-1*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(Pulse)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(Pulse)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PushButton10(New Surface)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 4))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '())(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 3))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton2(Reverse)" #f)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton2(Reverse)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton1(Oil Flow)" #f)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton1(Oil Flow)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")(cx-gui-do cx-activate-item "Error*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton1(Oil Flow)" #t)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton1(Oil Flow)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton1(Oil Flow)" #f)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton1(Oil Flow)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame19*List19(On Zone)\" '( 0))(cx-gui-do cx-activate-item \"Pathlines*Frame19*List19(On Zone)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame19*List19(On Zone)\" '( 1))(cx-gui-do cx-activate-item \"Pathlines*Frame19*List19(On Zone)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame19*List19(On Zone)\" '( 1))(cx-gui-do cx-activate-item \"Pathlines*Frame19*List19(On Zone)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame19*List19(On Zone)\" '( 2))(cx-gui-do cx-activate-item \"Pathlines*Frame19*List19(On Zone)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame19*List19(On Zone)\" '( 1))(cx-gui-do cx-activate-item \"Pathlines*Frame19*List19(On Zone)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame19*List19(On Zone)\" '( 0))(cx-gui-do cx-activate-item \"Pathlines*Frame19*List19(On Zone)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame19*List19(On Zone)\" '( 3))(cx-gui-do cx-activate-item \"Pathlines*Frame19*List19(On Zone)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton2(Reverse)" #t)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton2(Reverse)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton2(Reverse)" #f)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton2(Reverse)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton1(Oil Flow)" #t)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton1(Oil Flow)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|fuel-inlet (mass-flow-inlet)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"mass-flow-inlet-19-1*Frame4*Frame1(Momentum)*Frame1*Table1*Frame15*Table15*RealEntry2(Y-Component of Flow Direction)\" '( 1))(cx-gui-do cx-set-real-entry-list \"mass-flow-inlet-19-1*Frame4*Frame1(Momentum)*Frame1*Table1*Frame8*Table8*RealEntry2(Mass Flow Rate)\" '( 0.05))(cx-gui-do cx-activate-item \"mass-flow-inlet-19-1*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 6))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 4))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|fuel-inlet (mass-flow-inlet)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"mass-flow-inlet-19-1*Frame4*Frame1(Momentum)*Frame1*Table1*Frame8*Table8*RealEntry2(Mass Flow Rate)\" '( 1))(cx-gui-do cx-activate-item \"mass-flow-inlet-19-1*PanelButtons*PushButton2(Cancel)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|fuel-inlet (mass-flow-inlet)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*TypeSubMenu*velocity-inlet")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"velocity-inlet-19-1*Frame4*Frame1(Momentum)*Frame1*Table1*Frame12*Table12*RealEntry2(Velocity Magnitude)\" '( 10))")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"velocity-inlet-19-1*Frame4*Frame1(Momentum)*Frame1*Table1*DropDownList6(Velocity Specification Method)\" '( 0))(cx-gui-do cx-activate-item \"velocity-inlet-19-1*Frame4*Frame1(Momentum)*Frame1*Table1*DropDownList6(Velocity Specification Method)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "velocity-inlet-19-1*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models"))')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Models*Frame1*Table1*Frame1*List1(Models)\" '( 2))(cx-gui-do cx-activate-item \"Models*Frame1*Table1*Frame1*List1(Models)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Models*Frame1*Table1*PushButton2(Edit)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Viscous Model*Frame1*Table1*Frame1(Model)*ToggleBox1(Model)*Spalart-Allmaras (1 eqn)" #f)(cx-gui-do cx-activate-item "Viscous Model*Frame1*Table1*Frame1(Model)*ToggleBox1(Model)*Spalart-Allmaras (1 eqn)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Viscous Model*Frame1*Table1*Frame18(Options)*ToggleBox18(Options)*CheckButton1(Viscous Heating)" #f)(cx-gui-do cx-activate-item "Viscous Model*Frame1*Table1*Frame18(Options)*ToggleBox18(Options)*CheckButton1(Viscous Heating)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Viscous Model*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Methods"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Solution Methods*Frame1*Table1*Frame4*Table4*CheckButton2(Non-Iterative Time Advancement)" #f)(cx-gui-do cx-activate-item "Solution Methods*Frame1*Table1*Frame4*Table4*CheckButton2(Non-Iterative Time Advancement)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
fluentLauncherSettings2.SetEntityProperties(Properties=Set(EnvPath={}))
setup2.Edit()
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Species (Non-Premixed Combustion)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Species (Non-Premixed Combustion)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models"))')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Models*Frame1*Table1*Frame1*List1(Models)\" '( 5))(cx-gui-do cx-activate-item \"Models*Frame1*Table1*Frame1*List1(Models)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Models*Frame1*Table1*PushButton2(Edit)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Models*Frame1*Table1*Frame1*List1(Models)\" '( 2))(cx-gui-do cx-activate-item \"Models*Frame1*Table1*Frame1*List1(Models)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Models*Frame1*Table1*PushButton2(Edit)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Viscous Model*Frame1*Table1*Frame1(Model)*ToggleBox1(Model)*k-epsilon (2 eqn)" #f)(cx-gui-do cx-activate-item "Viscous Model*Frame1*Table1*Frame1(Model)*ToggleBox1(Model)*k-epsilon (2 eqn)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Viscous Model*Frame1*Table1*Frame18(Options)*ToggleBox18(Options)*CheckButton1(Viscous Heating)" #t)(cx-gui-do cx-activate-item "Viscous Model*Frame1*Table1*Frame18(Options)*ToggleBox18(Options)*CheckButton1(Viscous Heating)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Viscous Model*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Models*Frame1*Table1*Frame1*List1(Models)\" '( 5))(cx-gui-do cx-activate-item \"Models*Frame1*Table1*Frame1*List1(Models)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Models*Frame1*Table1*PushButton2(Edit)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame1(Chemistry)*Frame1*Frame1*Frame1(State Relation)*ToggleBox1(State Relation)*Steady Diffusion Flamelet" #f)(cx-gui-do cx-activate-item "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame1(Chemistry)*Frame1*Frame1*Frame1(State Relation)*ToggleBox1(State Relation)*Steady Diffusion Flamelet")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*PanelButtons*PushButton1(OK)")(cx-gui-do cx-activate-item "Warning*OK")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Models*Frame1*Table1*Frame1*List1(Models)\" '( 5))(cx-gui-do cx-activate-item \"Models*Frame1*Table1*Frame1*List1(Models)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Models*Frame1*Table1*PushButton2(Edit)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame1(Chemistry)*Frame1*Frame1*Frame6(Options)*ToggleBox1*Import Flamelet" #f)(cx-gui-do cx-activate-item "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame1(Chemistry)*Frame1*Frame1*Frame6(Options)*ToggleBox1*Import Flamelet")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame1(Chemistry)*Frame1*Frame3*PushButton2(Import Flamelet File)")(cx-gui-do cx-activate-item "Select File*Cancel")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame1(Chemistry)*Frame1*Frame2(Thermodynamic Database File Name)*PushButton2(Browse)")(cx-gui-do cx-activate-item "Select File*Cancel")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame1(Chemistry)*Frame1*Frame1*Frame1(State Relation)*ToggleBox1(State Relation)*Chemical Equilibrium" #f)(cx-gui-do cx-activate-item "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame1(Chemistry)*Frame1*Frame1*Frame1(State Relation)*ToggleBox1(State Relation)*Chemical Equilibrium")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*Frame2*Table2*Frame4(PDF Table Creation)*Frame9(Table)*PushButton3(Calculate PDF Table)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*PanelButtons*PushButton1(Apply)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Models*Frame1*Table1*Frame1*List1(Models)\" '( 2))(cx-gui-do cx-activate-item \"Models*Frame1*Table1*Frame1*List1(Models)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Models*Frame1*Table1*PushButton2(Edit)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Viscous Model*Frame1*Table1*Frame6(k-epsilon Model)*ToggleBox6(k-epsilon Model)*Realizable" #f)(cx-gui-do cx-activate-item "Viscous Model*Frame1*Table1*Frame6(k-epsilon Model)*ToggleBox6(k-epsilon Model)*Realizable")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Viscous Model*Frame1*Table1*Frame17(Near-Wall Treatment)*ToggleBox17(Near-Wall Treatment)*Non-Equilibrium Wall Functions" #f)(cx-gui-do cx-activate-item "Viscous Model*Frame1*Table1*Frame17(Near-Wall Treatment)*ToggleBox17(Near-Wall Treatment)*Non-Equilibrium Wall Functions")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Viscous Model*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Models*Frame1*Table1*Frame1*List1(Models)\" '( 5))(cx-gui-do cx-activate-item \"Models*Frame1*Table1*Frame1*List1(Models)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Models*Frame1*Table1*PushButton2(Edit)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Species Model*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton1(Check Case)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Case Check*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Methods"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Solution Methods*Frame1*Table1*Frame4*Table4*CheckButton2(Non-Iterative Time Advancement)" #f)(cx-gui-do cx-activate-item "Solution Methods*Frame1*Table1*Frame4*Table4*CheckButton2(Non-Iterative Time Advancement)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Initialization"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Solution Initialization*Frame1*Table1*Frame3(Initialization Methods)*ToggleBox3(Initialization Methods)*Hybrid  Initialization" #f)(cx-gui-do cx-activate-item "Solution Initialization*Frame1*Table1*Frame3(Initialization Methods)*ToggleBox3(Initialization Methods)*Hybrid  Initialization")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 4))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 0 4))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton2(Reverse)" #t)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton2(Reverse)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 0 3 4))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 0 3))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame9*List9(Release from Surfaces)\" '( 3))(cx-gui-do cx-activate-item \"Pathlines*Frame9*List9(Release from Surfaces)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton2(Reverse)" #f)(cx-gui-do cx-activate-item "Pathlines*Frame1(Options)*ToggleBox1(Options)*CheckButton2(Reverse)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 6))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Run Calculation*Frame1*Table1*Frame5*Table5*DropDownList1(Time Stepping Method)\" '( 0))(cx-gui-do cx-activate-item \"Run Calculation*Frame1*Table1*Frame5*Table5*DropDownList1(Time Stepping Method)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Discrete Phase (On)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Discrete Phase (On)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Discrete Phase Model*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models"))')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Models*Frame1*Table1*Frame1*List1(Models)\" '( 11))(cx-gui-do cx-activate-item \"Models*Frame1*Table1*Frame1*List1(Models)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Models*Frame1*Table1*PushButton2(Edit)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-toggle-button "Discrete Phase Model*Frame1*Frame1*Table1*Frame1(Interaction)*CheckButton1(Interaction with Continuous Phase)" #t)(cx-gui-do cx-activate-item "Discrete Phase Model*Frame1*Frame1*Table1*Frame1(Interaction)*CheckButton1(Interaction with Continuous Phase)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Discrete Phase Model*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Frame1*Table1*Frame6*Table6*IntegerEntry2(Number of Time Steps)" 9)(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*Frame6*Table6*IntegerEntry2(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*Frame6*Table6*IntegerEntry2(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*Frame6*Table6*IntegerEntry2(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*Frame6*Table6*IntegerEntry2(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Frame1*Table1*Frame6*Table6*IntegerEntry2(Number of Time Steps)" 8)(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*Frame6*Table6*IntegerEntry2(Number of Time Steps)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Frame1*Table1*Frame6*Table6*IntegerEntry2(Number of Time Steps)" 1)(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*Frame6*Table6*IntegerEntry2(Number of Time Steps)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Run Calculation*Frame1*Table1*Frame6*Table6*RealEntry1(Time Step Size)\" '( 1))(cx-gui-do cx-activate-item \"Run Calculation*Frame1*Table1*Frame6*Table6*RealEntry1(Time Step Size)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Run Calculation*Frame1*Table1*IntegerEntry9(Number of Iterations)" 2000)(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*IntegerEntry9(Number of Iterations)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Frame1*Table1*PushButton21(Calculate)")(cx-gui-do cx-set-toggle-button "Settings have changed!*Frame1*Table1*ToggleBox2*Use settings changes for current and future calculations" #f)(cx-gui-do cx-activate-item "Settings have changed!*Frame1*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 4))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList2\" '( 1))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList2\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|air-inlet (velocity-inlet)"))')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|air-inlet (velocity-inlet)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"velocity-inlet-5-1*Frame4*Frame1(Momentum)*Frame1*Table1*DropDownList6(Velocity Specification Method)\" '( 0))(cx-gui-do cx-activate-item \"velocity-inlet-5-1*Frame4*Frame1(Momentum)*Frame1*Table1*DropDownList6(Velocity Specification Method)\")")
setup2.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"velocity-inlet-5-1*Frame4*Frame1(Momentum)*Frame1*Table1*Frame19*Table19*RealEntry2(Y-Component of Flow Direction)\" '( -0.1))(cx-gui-do cx-activate-item \"velocity-inlet-5-1*PanelButtons*PushButton1(OK)\")")
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Run Calculation*Initialize & Calculate")(cx-gui-do cx-activate-item "Question*OK")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Pathlines*Edit...")')
setup2.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Pathlines*Frame6*Table6*DropDownList1(Color by)\" '( 6))(cx-gui-do cx-activate-item \"Pathlines*Frame6*Table6*DropDownList1(Color by)\")")
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*General Tools*write")')
Save(Overwrite=True)
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuWrite*Save Project")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*User-DefinedSubMenu*Memory...")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Memory*Frame1*Table1*IntegerEntry2" 0)(cx-gui-do cx-activate-item "User-Defined Memory*Frame1*Table1*IntegerEntry2")')
setup2.SendCommand(Command='(cx-gui-do cx-set-integer-entry "User-Defined Memory*Frame1*Table1*IntegerEntry4" 0)(cx-gui-do cx-activate-item "User-Defined Memory*Frame1*Table1*IntegerEntry4")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "User-Defined Memory*PanelButtons*PushButton1(OK)")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*General Tools*write")')
setup2.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuWrite*Save Project")(cx-gui-do cx-set-toggle-button "Settings have changed!*Frame1*Table1*ToggleBox2*Use settings changes for current and future calculations" #f)(cx-gui-do cx-activate-item "Settings have changed!*Frame1*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
Save(Overwrite=True)
